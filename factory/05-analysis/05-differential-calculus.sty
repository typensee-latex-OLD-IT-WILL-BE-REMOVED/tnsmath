% == PACKAGES USED == %

\RequirePackage{yhmath}
\RequirePackage{ifmtarg}
\RequirePackage{xstring}
\RequirePackage{forloop}


% == DEFINITIONS == %

% Sources :
%    * http://forum.mathematex.net/latex-f6/en-tete-de-ds-t12933.html#p124908
%    * http://forum.mathematex.net/latex-f6/derivee-avec-un-d-droit-et-espace-t12932.html#p124930
%    * http://forum.mathematex.net/latex-f6/remplacer-des-espaces-par-autre-chose-t12952.html#p125062
%    * http://forum.mathematex.net/latex-f6/probleme-de-remplacement-de-cdots-t13047.html#p125782

% dd, partial and pp useful operators
%
% Argument #1: the exponent
% Argument #2: the variable
% Argument #3: the operator
\newcommand{\@diffOpe}[3]{%
    #3%
    \ifx0#1\else^{#1}\!\fi%
    \hspace{0.07em}#2%
}

\DeclareRobustCommand\@dder{
    \mathop{}\mathopen{}\mathrm{d}
}

\newcommand\dd[2][0]{\@diffOpe{#1}{#2}{\@dder}}

\let\original@partial\partial
\renewcommand{\partial}{%
    \original@partial\mathopen{}%
}

\newcommand\pp[2][0]{\@diffOpe{#1}{#2}{\partial}}

% Power writing of total derivate
\newcommand\derpow{\@ifstar{\@derpow@star}{\@derpow@no@star}}

\newcommand\@derpow@no@star[2][]{
    \@ifmtarg{#1}{
        #2^{\left( 1 \right)}
    }{
        #2^{\left( #1 \right)}
    }
}

\newcounter{@derpow@no@star@counter}

\newcommand\@derpow@star[2][]{
    \@ifmtarg{#1}{
        #2^{\,\prime}
    }{
        #2^{\,%
            \forloop[1]{@derpow@no@star@counter}{0}{\value{@derpow@no@star@counter} < #1}{%
                \prime%
            }
        }
    }
}

% Fractional writing of total derivate
\newcommand\derfrac{\@ifstar{\@derfrac@star}{\@derfrac@no@star}}

\newcommand\@derfrac@no@star[3][]{
    \@ifmtarg{#1}{
        \frac{\dd{#2}}{\dd{#3}}
    }{
        \frac{\dd[#1]{#2}}{\dd{#3}^{#1}}
    }
}

\newcommand\@derfrac@star[3][]{
    \@derfrac@no@star[#1]{}{#3} #2
}

% Subscript writing of total derivate
\newcommand\dersub[3][]{
% The following command works because xstring traits {...} like a single character.
    \dd%
    \@ifmtarg{#1}{
        ^{\vphantom{\prime}}%
    }{%
        ^{#1}%
    }%
    _{#3} #2%
}

%% Subscript writing of partial derivate

\newcommand\@bracketIt[1]{(#1)}

\newcommand\partialsub[2]{
% The following command works because xstring traits {...} like a single character.
    \noexpandarg
    \StrSubstitute{#2}{^}{\@bracketIt}[\@index]
    \partial%
    ^{\vphantom{\prime}}%
    _{\expandafter\StrSubstitute\expandafter{\@index}{|}{\,}}%
    #1%
    \expandarg
}


% Prime writing of partial derivate
\newcommand\partialprime[2]{
% The following command works because xstring traits {...} like a single character.
    \noexpandarg
    \StrSubstitute{#2}{^}{\@bracketIt}[\@index]%
    \derpow*{#1}%
    _{\expandafter\StrSubstitute\expandafter{\@index}{|}{\,}}
    \expandarg
}

% Fractional writing of partial derivate
\newcommand\partialfrac{\@ifstar{\@partialfrac@star}{\@partialfrac@no@star}}

\newcommand\@partialfrac@no@star[3][0]{%
    \frac{%
        \pp[#1]{#2}%
    }{%
% ARG 1 = Separator: |
% ARG 2 = All parts: what the user types !
% ARG 3 = Before   : nothing here
% ARG 4 = Between  : ;
% ARG 5 = After    : nothing here
        \makemultiargument{|}{#3}{\partial}{\,\partial}{}%
    }
}

\newcommand\@partialfrac@star[3][\relax]{
    \@partialfrac@no@star[#1]{}{#3} #2
}

