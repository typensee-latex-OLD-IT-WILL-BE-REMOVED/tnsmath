% == PACKAGES USED == %


\RequirePackage{amsmath}
\RequirePackage{witharrows}

\RequirePackage{etoolbox}
\RequirePackage{simplekv}

\RequirePackage{longtable}


% == DEFINITIONS == %

% Texts used

\newcommand\textexplainmiddleID{Réf.}
\newcommand\textexplainmiddlehyp{Je sais que...}
\newcommand\textexplainmiddleprop{Propriété ou fait utilisé}
\newcommand\textexplainmiddlecons{Conséquence}

\newcommand\textexplainuniversityhyps{Démonstration sous les hypothèses}
\newcommand\textexplainuniversityhyp{Démonstration sous l'hypothèse}
\newcommand\textexplainuniversityccl{Conclusion}


% Without a table like writing

%    * Common tools
\newcommand\expltxt[1]{%
    \text{\color{blue} \footnotesize \itshape \{ #1 \}}%
}

\newcommand\expltxtup[1]{%
    \expltxt{$\uparrow$ #1 $\uparrow$}%
}

\newcommand\expltxtdown[1]{%
    \expltxt{$\downarrow$ #1 $\downarrow$}%
}

\newcommand\explnext{\@ifstar{\@explnext@star}{\@explnext@no@star}}
\newcommand\@explnext@no@star{}
\newcommand\@explnext@star{}

\newcommand\@explain@sep@{=}


%    * University version 

\newcommand\@explnext@university@no@star[2][\@explain@sep@]{
    &&\\
    &
    {#1}
    \if\relax\detokenize{#2}\relax\else
        {} \kern\expltxtspacein \expltxt{#2}
    \fi
    &&\\
    &
}

\newcommand\@explnext@university@separation{
    &&\\
    &
}

\newcommand\@explnext@university@star[3][\@explain@sep@]{
    \if\relax\detokenize{#2}\relax%
        \if\relax\detokenize{#3}\relax%
            \PackageError{lymath}{two empty arguments}%
                                 {at least one none empty text is needed}
        \fi%
    \fi%
    \if\relax\detokenize{#2}\relax\else
        \@explnext@university@separation{}
        {#1}\kern\expltxtspacein{}\expltxtdown{#2}
    \fi%
    \if\relax\detokenize{#3}\relax\else%
        \@explnext@university@separation{}
        \if\relax\detokenize{#2}\relax%
            {#1}%
        \else%
            \phantom{#1}%
        \fi
        \kern\expltxtspacein \expltxtup{#3}
    \fi%
    \@explnext@university@separation{}
}

\newenvironment{explain}[1][=]{
    \setlength{\abovedisplayskip}{0pt}%
    \setlength{\belowdisplayskip}{0pt}%
    \renewcommand\@explain@sep@{#1}%
    \renewcommand\@explnext@no@star\@explnext@university@no@star%
    \renewcommand\@explnext@star\@explnext@university@star%
    \csname flalign*\endcsname
        &
}{
    \csname endflalign*\endcsname
}


%    * Middle school version

\newcommand\@explnext@middle@school@no@star[2][\@explain@sep@]{
    \ifbool{@aexplain@starred@}{%
        \ifbool{@start@aexplain@}{%
            \if\relax\detokenize{#2}\relax\else
                \PackageError{lymath}{illegal argument to start aexplain*}%
                                     {no argument for the first use of explnext in aexplain*}
            \fi
            \global\boolfalse{@start@aexplain@}%
        }{
        \if\relax\detokenize{#2}\relax\else
            \Arrow[tikz = <->]{#2}
        \fi
        \\
        }
    }{
         \if\relax\detokenize{#2}\relax\else
            \Arrow[tikz = <->]{#2}
        \fi
        \\
    }%
    &#1
}

% Source
%    * https://tex.stackexchange.com/a/549370/6880

\ExplSyntaxOn
\NewDocumentCommand \@double@arrow@ { m m }
  {
    \hbox_set:Nn \l_tmpa_box { #1 }
    \dim_set:Nn \l_tmpa_dim { \box_wd:N \l_tmpa_box + 1.5em }
    \Arrow [tikz = ->] { #1 }
    \use:x { \Arrow [xoffset=\dim_use:N \l_tmpa_dim , tikz = <-] } { #2 }
  }
\ExplSyntaxOff

\newcommand\@explnext@middle@school@star[3][\@explain@sep@]{
    \if\relax\detokenize{#2}\relax%
        \if\relax\detokenize{#3}\relax%
            \PackageError{lymath}{two empty arguments}%
                                 {at least one none empty text is needed}
        \else%
            \Arrow[tikz = <-]{#3}%
        \fi%
    \else%
        \if\relax\detokenize{#3}\relax%
            \Arrow[tikz = ->]{#2}%
        \else%
            \@double@arrow@{#2}{#3}
        \fi%
    \fi%
    \\
    &#1
}

\newbool{@start@aexplain@} 
\newbool{@aexplain@starred@} 

\newenvironment{aexplain}[1][=]{
    \renewcommand\@explnext@no@star\@explnext@middle@school@no@star%
    \renewcommand\@explnext@star\@explnext@middle@school@star%
    \renewcommand\@explain@sep@{#1}%
    \boolfalse{@aexplain@starred@}%
    \boolfalse{@start@aexplain@}%
    $\WithArrows[tikz=blue]
        &\phantom{{}\@explain@sep@{}}
}{
    \endWithArrows$
}

\newenvironment{aexplain*}[1][=]{
    \renewcommand\@explnext@no@star\@explnext@middle@school@no@star%
    \renewcommand\@explnext@star\@explnext@middle@school@star%
    \renewcommand\@explain@sep@{#1}%
    \booltrue{@aexplain@starred@}%
    \booltrue{@start@aexplain@}%
    $\WithArrows[tikz=blue]
}{
    \endWithArrows$
}


% With a table like writing

%    * Common tools

\newcommand\explref{\@ifstar{\@explref@star}{\@explref@no@star}}

\newcommand\@explref@star[1]{%
    \framebox[1.5em]{#1}%
}

\newcommand\@explref@no@star[1]{%
    \@explref@star{\ref{#1}}%
}

\newcommand\demostep{}


%    * University version 

\newcounter{@demo@explain@id}


\newcommand\@expl@id[1]{%
    \framebox[1.5em]{\the@demo@explain@id}%
    \if\relax\detokenize{#1}\relax\else%
        \addtocounter{@demo@explain@id}{-1}%
        \refstepcounter{@demo@explain@id}\label{#1}
    \fi
    \stepcounter{@demo@explain@id}%
}


\newbool{@start@demo@explain@} 


\newcommand\@demostep@no@star[1][]{%
    \ifbool{@start@demo@explain@}{%
        \global\boolfalse{@start@demo@explain@}%
    }{%
        \\
    }%
    \@expl@id{#1}
    &
}


\setKVdefault[@demo@explain@keys]{%
    start = 1,
    hyps  = {},
    hyp   = {},
    ccl   = {}
}


\newenvironment{demoexplain}[1][]{
	\renewcommand\demostep\@demostep@no@star
    \useKVdefault[@demo@explain@keys]
    \setKV[@demo@explain@keys]{#1}
    %
    \ifthenelse{\equal{\useKV[@demo@explain@keys]{start}}{last}}{
    % If no environment has been used before !
        \ifnum\value{@demo@explain@id}<1
            \setcounter{@demo@explain@id}{1}
        \fi
    }{%
        \setcounter{@demo@explain@id}{\useKV[@demo@explain@keys]{start}}%
    }%
    \def\hyps{\useKV[@demo@explain@keys]{hyps}}
    \def\hyp{\useKV[@demo@explain@keys]{hyp}}
    \edef\ccl{\useKV[@demo@explain@keys]{ccl}}
    %
    \if\relax\hyps\relax\else%
        \if\relax\hyp\relax\else%
            \PackageError{lymath}{hyps and hyp are both used}%
                                 {use either hyps or hyp, or none of them}
        \fi
    \fi
    %
    \if\relax\hyps\relax\else%
        \underline{\textexplainuniversityhyps} : \hyps

        \medskip
    \fi
    \if\relax\hyp\relax\else%
        \underline{\textexplainuniversityhyp} : \hyp

        \medskip
    \fi
    \booltrue{@start@demo@explain@}
    \begin{tabular}{lll}
}{
    \end{tabular}
    \if\relax\ccl\relax\else%
        
        \medskip

        \underline{\textexplainuniversityccl} : \ccl
    \fi
}


%    * Middle school version

\newcounter{@demo@explain@star@id}


\newcommand\@expl@star@id[1]{%
    \the@demo@explain@star@id%
    \if\relax\detokenize{#1}\relax\else%
        \addtocounter{@demo@explain@star@id}{-1}%
        \refstepcounter{@demo@explain@star@id}\label{#1}
    \fi
    \stepcounter{@demo@explain@star@id}%
}


\newcommand\@demostep@star[1][]{%
    \\
    \hline
    \@expl@star@id{#1}
    &
}


\setKVdefault[@demo@explain@star@keys]{%
    start = 1
}


\newenvironment{demoexplain*}[1][]{
	\renewcommand\demostep\@demostep@star
    \useKVdefault[@demo@explain@star@keys]
    \setKV[@demo@explain@star@keys]{#1}
    %
    \ifthenelse{\equal{\useKV[@demo@explain@star@keys]{start}}{last}}{
    % If no environment has been used before !
        \ifnum\value{@demo@explain@star@id}<1
            \setcounter{@demo@explain@star@id}{1}
        \fi
    }{%
        \setcounter{@demo@explain@star@id}{\useKV[@demo@explain@star@keys]{start}}%
    }%
    \small
    \renewcommand{\arraystretch}{1.5}
    \begin{tabular}{c|p{0.29\linewidth}|p{0.29\linewidth}|p{0.29\linewidth}}
    	\textbf{\footnotesize\textexplainmiddleID}
			& \textbf{\footnotesize\textexplainmiddlehyp}
	        & \textbf{\footnotesize\textexplainmiddleprop}
	        & \textbf{\footnotesize\textexplainmiddlecons}
}{
    \end{tabular}
    \renewcommand{\arraystretch}{1}
}
