% ----------------------- %
% -- PACKAGES REQUIRED -- %
% ----------------------- %

\RequirePackage{amsmath}
\RequirePackage{amssymb}
\RequirePackage{bm}
\RequirePackage{dsfont}
\RequirePackage[f]{esvect}
\RequirePackage{forloop}
\RequirePackage{graphicx}
\RequirePackage{ifmtarg}
\RequirePackage{mathrsfs}
\RequirePackage{mathtools}
\RequirePackage{nicematrix}
\RequirePackage{relsize}
\RequirePackage{stmaryrd}
\RequirePackage{trimspaces}
\RequirePackage[Symbolsmallscale]{upgreek}
\RequirePackage{xparse}
\RequirePackage{xstring}
\RequirePackage{yhmath}


% ------------------ %
% -- COMMON TOOLS -- %
% ------------------ %

\@ifpackagewith{babel}{french}{
    \newcommand\lymathsep{;}
}{
	\newcommand\lymathsep{,}
}


\newcommand\@extra@phantom{%
	\vphantom{\relsize{1.25}{\text{$\displaystyle F_1^2$}}}%
}

\newcommand\@interval@tool@star[5]{%
	\ensuremath{ \left#1 \@extra@phantom \right. \!\! #2 #3 #4 \left. \@extra@phantom \!\! \right#5}%
}

\newcommand\@interval@tool@no@star[5]{\ensuremath{ \left#1 #2 #3 #4 \right#5}}


% Source : the following lines come directly for the following post
%
%    * https://tex.stackexchange.com/a/475291/6880

\ExplSyntaxOn
% General purpose macro for defining other macros
	\NewDocumentCommand{\makemultiargument}{mmmmm}{
		\lymath_multiarg:nnnnn { #1 } { #2 } { #3 } { #4 } { #5 }
	}

% Allocate a private variable
	\seq_new:N \l__lymath_generic_seq

% The internal version of the general purpose macro
	\cs_new_protected:Nn \lymath_multiarg:nnnnn{
		% #1 = separator
		% #2 = multiargument
		% #3 = code before
		% #4 = code between
		% #5 = code after
		% A group allows nesting
		\group_begin:
 		% Split the multiargument into parts
		\seq_set_split:Nnn \l__lymath_generic_seq { #1 } { #2 }
		% Execute the <code before>
	  	#3 	
		% Deliver the items, with the chosen material between them
	  	\seq_use:Nn \l__lymath_generic_seq { #4 }
  		% Execute the <code after>
  		#5
  		% End the group started at the beginning
  		\group_end:
	}
\ExplSyntaxOff


% --------------------- %
% -- SPACES FRACTION -- %
% --------------------- %

\let\stdfrac\frac
\renewcommand\frac[2]{\stdfrac{\, #1 \,}{\, #2 \,}}

\let\stddfrac\dfrac
\renewcommand\dfrac[2]{\stddfrac{\, #1 \,}{\, #2 \,}}


% ----------------------- %
% -- SPACES SEMI COLON -- %
% ----------------------- %

% Sources :
%    * http://forum.mathematex.net/latex-f6/espacement-autour-des-points-virgules-en-mode-maths-t8379.html#p83226
%    * http://forum.mathematex.net/latex-f6/espace-autour-d-un-point-virgule-en-mode-maths-t12323.html#p119334

% This command is adapted from the one given in the following link fro factorial :
% http://www.math.bme.hu/latex/magyar_pre_tug2004.pdf#page=28

\@ifpackagewith{babel}{french}{
    \def\fixmathspacing#1#2#3{%
        \def#1{#3}%
        \expandafter\addto\csname \expandafter
        \ifx\csname mathoptions@on\endcsname\relax% detect nath.sty
            check@mathfonts%
        \else
            mathoptions@on%
        \fi
        \endcsname{%
            \catcode`#212 \mathcode`#2"8000
            \begingroup\lccode`~`#2\lowercase{\endgroup\def~}{#1}
        }
    }

	\fixmathspacing{\fixedsemicolon}{;}{\mathclose{}\mathpunct{}\mathpunct{\mathchar"603B}}
}{}


% ------------------ %
% -- GENERAL SETS -- %
% ------------------ %

% General sets
\newcommand\geneset{\@ifstar{\@geneset@star}{\@geneset@no@star}}
\newcommand\@geneset@no@star[1]{\ensuremath{\@interval@tool@no@star{\{}{#1}{}{}{\}}}}
\newcommand\@geneset@star[1]{\ensuremath{\@interval@tool@star{\{}{#1}{}{}{\}}}}

% Probabilistic sets
\newcommand\probaset{\@ifstar{\@probaset@star}{\@probaset@no@star}}

\newcommand\@probaset@no@star[1]{
	\IfSubStr{,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,}{,#1,}{
    	\mathcal{#1}
	}{%
    	\PackageError{lymath}{Command << probaset >> only accepts single upper case letters}%
	}
}

\newcommand\@probaset@star[2]{%
	\@probaset@no@star{#1}_{#2}
}

% Geometric sets
%
% With ''mathscr'', we only have the upper case letters.
% So we use the following trick for lower case letters.
%
% Source:
%    * page 68 de ''The Comprehensive LATEX Symbol List''
\DeclareMathAlphabet{\mathpzc}{OT1}{pzc}{m}{it}

\newcommand\geoset{\@ifstar{\@geoset@star}{\@geoset@no@star}}

\newcommand\@geoset@no@star[1]{
    \IfSubStr{,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,}{,#1,}{
    	\mathscr{#1}
	}{%
        \IfSubStr{,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,}{,#1,}{
    	    \mathpzc{#1}
	    }{%
            \PackageError{lymath}{Command << fieldset >> only accepts single h, k or upper case letter}%
    	}
	}
}

\newcommand\@geoset@star[2]{%
	\@geoset@no@star{#1}_{#2}
}

% Field like sets
%
% Only the upper case letters and also h and k.
%
% With ''\mathbb'', there are only the upper case letters.
\newcommand\fieldset{\@ifstar{\@fieldset@star}{\@fieldset@no@star}}

\newcommand\@fieldset@no@star[1]{
	\IfSubStr{,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,h,k,}{,#1,}{
	    \mathds{#1}
	}{%
    	\PackageError{lymath}{Command << fieldset >> only accepts letters h or k alone, and upper case letters}%
	}
}

\newcommand\@fieldset@star[2]{%
	\@fieldset@no@star{#1}_{#2}
}

% Tools for classical sets
\newcommand\setpos{\textbf{\tiny+}}
\newcommand\setneg{\vphantom{\setpos}-}
\newcommand\set@star{\text{*}}

\newcommand\specialset{\@ifstar{\@specialset@star}{\@specialset@no@star}}

\newcommand\@specialset@no@star[2]{
    \IfEqCase{#2}{
        {s}{ #1^{\set@star} }
        {n}{ #1^{\phantom{\set@star}}_{\setneg} }
        {p}{ #1^{\phantom{\set@star}}_{\setpos} }
        {sn}{ #1^{\set@star}_{\setneg} }
        {sp}{ #1^{\set@star}_{\setpos} }
    }
}

\newcommand\@specialset@star[2]{
    \IfEqCase{#2}{
        {s}{ #1_{\neq 0} }
        {n}{ #1_{\le 0} }
        {p}{ #1_{\ge 0} }
        {sn}{ #1_{< 0} }
        {sp}{ #1_{> 0} }
    }
}

% The empty set
\newcommand\nullset{%
	\ensuremath{\text{\scalebox{1.2}{$\varnothing$}}}%
}

% List of classical sets - START

\newcommand\NN{\ensuremath{\fieldset{N}}}
\newcommand\NNs{\ensuremath{\specialset{\NN}{s}}}

\newcommand\ZZ{\ensuremath{\fieldset{Z}}}
\newcommand\ZZp{\ensuremath{\specialset{\ZZ}{p}}}
\newcommand\ZZn{\ensuremath{\specialset{\ZZ}{n}}}
\newcommand\ZZs{\ensuremath{\specialset{\ZZ}{s}}}
\newcommand\ZZsn{\ensuremath{\specialset{\ZZ}{sn}}}
\newcommand\ZZsp{\ensuremath{\specialset{\ZZ}{sp}}}

\newcommand\DD{\ensuremath{\fieldset{D}}}
\newcommand\DDp{\ensuremath{\specialset{\DD}{p}}}
\newcommand\DDn{\ensuremath{\specialset{\DD}{n}}}
\newcommand\DDs{\ensuremath{\specialset{\DD}{s}}}
\newcommand\DDsn{\ensuremath{\specialset{\DD}{sn}}}
\newcommand\DDsp{\ensuremath{\specialset{\DD}{sp}}}

\newcommand\QQ{\ensuremath{\fieldset{Q}}}
\newcommand\QQp{\ensuremath{\specialset{\QQ}{p}}}
\newcommand\QQn{\ensuremath{\specialset{\QQ}{n}}}
\newcommand\QQs{\ensuremath{\specialset{\QQ}{s}}}
\newcommand\QQsn{\ensuremath{\specialset{\QQ}{sn}}}
\newcommand\QQsp{\ensuremath{\specialset{\QQ}{sp}}}

\newcommand\RR{\ensuremath{\fieldset{R}}}
\newcommand\RRp{\ensuremath{\specialset{\RR}{p}}}
\newcommand\RRn{\ensuremath{\specialset{\RR}{n}}}
\newcommand\RRs{\ensuremath{\specialset{\RR}{s}}}
\newcommand\RRsn{\ensuremath{\specialset{\RR}{sn}}}
\newcommand\RRsp{\ensuremath{\specialset{\RR}{sp}}}

\newcommand\CC{\ensuremath{\fieldset{C}}}
\newcommand\CCs{\ensuremath{\specialset{\CC}{s}}}

\newcommand\HH{\ensuremath{\fieldset{H}}}
\newcommand\HHs{\ensuremath{\specialset{\HH}{s}}}

\newcommand\OO{\ensuremath{\fieldset{O}}}
\newcommand\OOs{\ensuremath{\specialset{\OO}{s}}}

% List of classical sets - END


% --------------- %
% -- INTERVALS -- %
% --------------- %

% Macros for intervals - START

% Macros for french real intervals

\newcommand\intervalCO{\@ifstar{\@intervalCO@star}{\@intervalCO@no@star}}
\newcommand\@intervalCO@no@star[2]{\ensuremath{\@interval@tool@no@star{[}{#1}{\lymathsep}{#2}{[}}}
\newcommand\@intervalCO@star[2]{\ensuremath{\@interval@tool@star{[}{#1}{\lymathsep}{#2}{[}}}

\newcommand\intervalC{\@ifstar{\@intervalC@star}{\@intervalC@no@star}}
\newcommand\@intervalC@no@star[2]{\ensuremath{\@interval@tool@no@star{[}{#1}{\lymathsep}{#2}{]}}}
\newcommand\@intervalC@star[2]{\ensuremath{\@interval@tool@star{[}{#1}{\lymathsep}{#2}{]}}}

\newcommand\intervalO{\@ifstar{\@intervalO@star}{\@intervalO@no@star}}
\newcommand\@intervalO@no@star[2]{\ensuremath{\@interval@tool@no@star{]}{#1}{\lymathsep}{#2}{[}}}
\newcommand\@intervalO@star[2]{\ensuremath{\@interval@tool@star{]}{#1}{\lymathsep}{#2}{[}}}

\newcommand\intervalOC{\@ifstar{\@intervalOC@star}{\@intervalOC@no@star}}
\newcommand\@intervalOC@no@star[2]{\ensuremath{\@interval@tool@no@star{]}{#1}{\lymathsep}{#2}{]}}}
\newcommand\@intervalOC@star[2]{\ensuremath{\@interval@tool@star{]}{#1}{\lymathsep}{#2}{]}}}

% Macros for american real intervals

\newcommand\intervalCP{\@ifstar{\@intervalCP@star}{\@intervalCP@no@star}}
\newcommand\@intervalCP@no@star[2]{\ensuremath{\@interval@tool@no@star{[}{#1}{\lymathsep}{#2}{)}}}
\newcommand\@intervalCP@star[2]{\ensuremath{\@interval@tool@star{[}{#1}{\lymathsep}{#2}{)}}}

\newcommand\intervalP{\@ifstar{\@intervalP@star}{\@intervalP@no@star}}
\newcommand\@intervalP@no@star[2]{\ensuremath{\@interval@tool@no@star{(}{#1}{\lymathsep}{#2}{)}}}
\newcommand\@intervalP@star[2]{\ensuremath{\@interval@tool@star{(}{#1}{\lymathsep}{#2}{)}}}

\newcommand\intervalPC{\@ifstar{\@intervalPC@star}{\@intervalPC@no@star}}
\newcommand\@intervalPC@no@star[2]{\ensuremath{\@interval@tool@no@star{(}{#1}{\lymathsep}{#2}{]}}}
\newcommand\@intervalPC@star[2]{\ensuremath{\@interval@tool@star{(}{#1}{\lymathsep}{#2}{]}}}

% Macros for discrete intervals

\newcommand\ZintervalCO{\@ifstar{\@ZintervalCO@star}{\@ZintervalCO@no@star}}
\newcommand\@ZintervalCO@no@star[2]{\ensuremath{\@interval@tool@no@star{\llbracket}{#1}{\lymathsep}{#2}{\llbracket}}}
\newcommand\@ZintervalCO@star[2]{\ensuremath{\@interval@tool@star{\llbracket}{#1}{\lymathsep}{#2}{\llbracket}}}

\newcommand\ZintervalC{\@ifstar{\@ZintervalC@star}{\@ZintervalC@no@star}}
\newcommand\@ZintervalC@no@star[2]{\ensuremath{\@interval@tool@no@star{\llbracket}{#1}{\lymathsep}{#2}{\rrbracket}}}
\newcommand\@ZintervalC@star[2]{\ensuremath{\@interval@tool@star{\llbracket}{#1}{\lymathsep}{#2}{\rrbracket}}}

\newcommand\ZintervalO{\@ifstar{\@ZintervalO@star}{\@ZintervalO@no@star}}
\newcommand\@ZintervalO@no@star[2]{\ensuremath{\@interval@tool@no@star{\rrbracket}{#1}{\lymathsep}{#2}{\llbracket}}}
\newcommand\@ZintervalO@star[2]{\ensuremath{\@interval@tool@star{\rrbracket}{#1}{\lymathsep}{#2}{\llbracket}}}

\newcommand\ZintervalOC{\@ifstar{\@ZintervalOC@star}{\@ZintervalOC@no@star}}
\newcommand\@ZintervalOC@no@star[2]{\ensuremath{\@interval@tool@no@star{\rrbracket}{#1}{\lymathsep}{#2}{\rrbracket}}}
\newcommand\@ZintervalOC@star[2]{\ensuremath{\@interval@tool@star{\rrbracket}{#1}{\lymathsep}{#2}{\rrbracket}}}

% Macros for intervals - END


% --------------- %
% -- CONSTANTS -- %
% --------------- %

% Constants - START

% User's constants

\newcommand\ct[1]{%
    \IfStrEqCase{#1}{%
        {gamma}{\upgamma}%
        {pi}{\uppi}%
        {tau}{\uptau}%
    }[\text{\textbf{#1}}]
}

% Classical constants
    
\newcommand\ggamma{\ct{gamma}}
\newcommand\ppi{\ct{pi}}
\newcommand\ttau{\ct{tau}}
\newcommand\ee{\ct{e}}
\newcommand\ii{\ct{i}}
\newcommand\jj{\ct{j}}
\newcommand\kk{\ct{k}}

% Constants - END


% ------------------ %
% -- ABS FUNCTION -- %
% ------------------ %

% Source :
%    * https://tex.stackexchange.com/a/43009/6880
%
\DeclarePairedDelimiter\abs{\lvert}{\rvert}%

\let\@old@abs\abs
\def\abs{\@ifstar{\@old@abs}{\@old@abs*}}


% --------------------- %
% -- NAMED FUNCTIONS -- %
% --------------------- %

% Source for DeclareMathMacro :
%    * http://forum.mathematex.net/latex-f6/bonnes-commandes-de-base-t12278.html

% One useful tool

\newcommand\DeclareMathMacro[2]{%
    \expandafter\let\csname original@\expandafter\@gobble\string#1\endcsname=#1
    \expandafter\def\csname\expandafter\@gobble\string#1\endcsname{%
        \relax%
        \ifmmode#2%
        \else%
            \csname original@\expandafter\@gobble\string#1\expandafter\endcsname%
        \fi%
    }%
}

% Classical functions - START

\DeclareMathMacro{\ch}{\operatorname{ch}}
\DeclareMathMacro{\sh}{\operatorname{sh}}
\DeclareMathMacro{\th}{\operatorname{th}}
\DeclareMathMacro{\ach}{\operatorname{ach}}
\DeclareMathMacro{\ash}{\operatorname{ash}}
\DeclareMathMacro{\ath}{\operatorname{ath}}
\DeclareMathMacro{\arccosh}{\operatorname{arccosh}}
\DeclareMathMacro{\arcsinh}{\operatorname{arcsinh}}
\DeclareMathMacro{\arctanh}{\operatorname{arctanh}}
\DeclareMathMacro{\acos}{\operatorname{acos}}
\DeclareMathMacro{\asin}{\operatorname{asin}}
\DeclareMathMacro{\atan}{\operatorname{atan}}
\DeclareMathMacro{\pgcd}{\operatorname{pgcd}}
\DeclareMathMacro{\ppcm}{\operatorname{ppcm}}

\newcommand\expb[1]{\exp_{#1}}
\newcommand\logb[1]{\log_{#1}}

% Classical functions - END


% --------------- %
% -- SEQUENCES -- %
% --------------- %

\newcommand\suprageo[5]{ \prescript{#5}{#2}{#1}_{#3}^{#4} }

\newcommand\hypergeo[3]{%
    \suprageo{#1}{#2}{#3}{}{}%
}

\newcommand\seqplus[3]{%
    \suprageo{#1}{}{#2}{#3}{}%
}


% --------------------------- %
% -- DIFFERENTIAL CALCULUS -- %
% --------------------------- %

% Sources :
%    * http://forum.mathematex.net/latex-f6/en-tete-de-ds-t12933.html#p124908
%    * http://forum.mathematex.net/latex-f6/derivee-avec-un-d-droit-et-espace-t12932.html#p124930
%    * http://forum.mathematex.net/latex-f6/remplacer-des-espaces-par-autre-chose-t12952.html#p125062
%    * http://forum.mathematex.net/latex-f6/probleme-de-remplacement-de-cdots-t13047.html#p125782
\noexpandarg

% dd, partial and pp usefull operators
\newcommand{\@diffOpe}[3]{%
    #3%
    \IfStrEq{#1}{0}{}{^{#1}\!}%
    \IfBeginWith{#2}{f}{\!}{}%
    \hspace{0.07em}#2%
}

\DeclareRobustCommand\@dder{
    \mathop{}\mathopen{}\mathrm{d}
}

\newcommand\dd[2][0]{\@diffOpe{#1}{#2}{\@dder}}

\let\original@partial\partial
\renewcommand{\partial}{%
    \original@partial\mathopen{}%
}

\newcommand\pp[2][0]{\@diffOpe{#1}{#2}{\partial}}

% Power writing of total derivate
\newcommand\derpow{\@ifstar{\@derpow@star}{\@derpow@no@star}}

\newcommand\@derpow@no@star[2][\relax]{
    \IfStrEq{#1}{\relax}{
        #2^{\left( 1 \right)}
    }{
        #2^{\left( #1 \right)}
    }
}

\newcounter{@derpow@no@star@counter}

\newcommand\@derpow@star[2][\relax]{
    \IfStrEq{#1}{\relax}{
        #2^{\,\prime}
    }{
        #2^{\,%
        	\forloop[1]{@derpow@no@star@counter}{0}{\value{@derpow@no@star@counter} < #1}{%
				\prime%
			}
		}
    }
}

% Fractional writing of total derivate
\newcommand\derfrac{\@ifstar{\@derfrac@star}{\@derfrac@no@star}}

\newcommand\@derfrac@no@star[3][\relax]{
    \IfStrEq{#1}{\relax}{
        \frac{\dd{#2}}{\dd{#3}}
    }{
        \frac{\dd[#1]{#2}}{\dd{#3}^{#1}}
    }
}

\newcommand\@derfrac@star[3][\relax]{
	\@derfrac@no@star[#1]{}{#3} #2
}

% Subscript writing of total derivate
\newcommand\dersub[3][]{
% The following command works because xstring traits {...} like a single character.
    \dd%
    \IfStrEq{#1}{}{%
    	^{\vphantom{\prime}}%
    }{%
        ^{#1}%
    }%
    _{#3} #2%
}

% Subscript writing of partial derivate
\newcommand\@bracketIt[1]{(#1)}

\newcommand\partialsub[2]{
% The following command works because xstring traits {...} like a single character.
    \StrSubstitute{#2}{^}{\@bracketIt}[\@index]
    \partial%
    ^{\vphantom{\prime}}%
    _{\expandafter\StrSubstitute\expandafter{\@index}{|}{\,}}%
    #1%
}

% Prime writing of partial derivate
\newcommand\partialprime[2]{
% The following command works because xstring traits {...} like a single character.
    \StrSubstitute{#2}{^}{\@bracketIt}[\@index]%
    #1%
    ^{\prime}%
    _{\expandafter\StrSubstitute\expandafter{\@index}{|}{\,}}
}

% Fractional writing of partial derivate
\newcommand\partialfrac{\@ifstar{\@partialfrac@star}{\@partialfrac@no@star}}

\newcommand\@partialfrac@no@star[3][0]{%
    \frac{%
        \pp[#1]{#2}%
    }{%
        \StrSubstitute{\partial#3}{|}{\, \partial}[\@deno]%
        \expandafter\StrSubstitute\expandafter{\@deno}{\partial\cdots}{\,\cdots{}\,\partial}
    }
}

\newcommand\@partialfrac@star[3][\relax]{
	\@partialfrac@no@star[#1]{}{#3} #2
}


% ----------------------- %
% -- INTEGRAL CALCULUS -- %
% ----------------------- %

% Source for minimizing spaces between consecutive integrals :
%    * http://forum.mathematex.net/latex-f6/integrale-triple-t13312.html#p128016

% Consecutive integrals

\let\original@int\int
\DeclareRobustCommand{\int}{%
    \original@int\operator@followup{\@ifnextchar{\int}{\!\!}{}}%
}

\def\operator@followup#1{%
    \@ifnextchar{^}{\operator@followup@sup{#1}}%
        {\operator@followup@nosup{#1}}%
}

\def\operator@followup@sup#1^#2{%
    \@ifnextchar{_}{\operator@followup@sup@sub{#1}^{#2}}%
        {\operator@followup@sup@nosub{#1}^{#2}}%
}

\def\operator@followup@sup@sub#1^#2_#3{%
    \operator@followup@{#1}{#2}{#3}%
}

\def\operator@followup@sup@nosub#1^#2{%
    \operator@followup@{#1}{#2}{}%
}

\def\operator@followup@nosup#1{%
    \@ifnextchar{_}{\operator@followup@nosup@sub{#1}}
        {\operator@followup@nosup@nosub{#1}}%
}

\def\operator@followup@nosup@sub#1_#2{%
    \@ifnextchar{^}{\operator@followup@nosup@sub@sup{#1}_{#2}}
        {\operator@followup@nosup@sub@nosup{#1}_{#2}}%
}

\def\operator@followup@nosup@sub@sup#1_#2^#3{%
    \operator@followup@{#1}{#3}{#2}%
}

\def\operator@followup@nosup@sub@nosup#1_#2{%
    \operator@followup@{#1}{}{#2}%
}

\def\operator@followup@nosup@nosub#1{%
    \operator@followup@{#1}{}{}%
}

\def\operator@followup@#1#2#3{%
    ^{#2}_{#3}#1%
}

% The hook calculator
\newcommand\hook{\@ifstar{\@hook@star}{\@hook@no@star}}
\newcommand\@hook@star[3]{\ensuremath{ \left[ \vphantom{\relsize{1.25}{\text{$\displaystyle F_1^2$}}} \right. \!\! #1 \left. \vphantom{\relsize{1.25}{\text{$\displaystyle F_1^2$}}} \!\! \right]_{#2}^{#3} }}
\newcommand\@hook@no@star[3]{\left[ \vphantom{\text{\relsize{1.1}$#1$}} #1 \right]_{#2}^{#3}}

\newcommand\vhook{\@ifstar{\@vhook@star}{\@vhook@no@star}}
\newcommand\@vhook@star[3]{#1 {\text{\relsize{1.5}$\rvert$}}_{#2}^{#3}}
\newcommand\@vhook@no@star[3]{\left. #1 \right\rvert_{#2}^{#3}}


% ------------------------ %
% -- BIG SMALL O AND CO -- %
% ------------------------ %

% Sources :
%     1) http://forum.mathematex.net/latex-f6/bonnes-commandes-de-base-t12278.html
%     2) http://tex.stackexchange.com/questions/30944/mathcalo-and-font-size
%     3) https://tex.stackexchange.com/a/53091/6880

\newcommand\@bigtAsymptoricOpe[2]{%
    \ensuremath{%
        \if\relax\detokenize{#2}\relax
            #1%
        \else
            \mathop{}\mathopen{}#1\mathopen{}\left( #2 \right)%
        \fi
    }%
}

\newcommand\bigomega[1]{%
    \@bigtAsymptoricOpe{\bm{\Omega}}{#1}%
}

\newcommand\bigtheta[1]{%
    \@bigtAsymptoricOpe{\bm{\Theta}}{#1}%
}

\newcommand\bigO[1]{%
    \@bigtAsymptoricOpe{\mathcal{O}}{#1}%
}

\newcommand\smallO[1]{%
    \if\relax\detokenize{#1}\relax
        \mathchoice{% * Display style
            {\scriptstyle\mathcal{O}}%
        }{%           * Text style
            {\scriptstyle\mathcal{O}}%
        }{%           * Script style
            {\scriptscriptstyle\mathcal{O}}%
        }{%           * Script script style
            %\scalebox{0.8}{$\scriptscriptstyle\mathcal{O}$}%
        }
    \else
        \mathchoice{% * Display style
            \operatorname{\scriptstyle\mathcal{O}}\!\left(#1\right)%
        }{%           * Text style
            \operatorname{\scriptstyle\mathcal{O}}\!\left(#1\right)%
        }{%           * Script style
            \operatorname{\scriptscriptstyle\mathcal{O}}\left(#1\right)%
        }{%           * Script script style
            \operatorname{\scalebox{0.8}{$\scriptscriptstyle\mathcal{O}$}}\left(#1\right)%
        }
    \fi
}


% ----------- %
% -- POINT -- %
% ----------- %

\newcommand\pt{\@ifstar{\@pt@star}{\@pt@no@star}}

\newcommand\@pt@no@star[1]{\mathrm{#1}}

\newcommand\@pt@star[2]{%
	\@pt@no@star{#1}_{#2}
}


% ------------ %
% -- VECTOR -- %
% ------------ %

\newcommand\@no@point[1]{%
	\if#1i%
		\imath%
	\else%
		\if#1j%
			\jmath%
		\else%
			#1
		\fi%
	\fi%
}

\newcommand\vect{\@ifstar{\@vect@star}{\@vect@no@star}}
\newcommand*\@vect@star[1]{\vv*{\@no@point{#1}}}
\newcommand*\@vect@no@star[1]{\vv{\@no@point{#1}}}


% ----------------- %
% -- VECTOR NORM -- %
% ----------------- %

% Source :
%    * https://tex.stackexchange.com/a/43009/6880
%
\DeclarePairedDelimiter\norm{\lVert}{\rVert}%


\let\@old@norm\norm
\def\norm{\@ifstar{\@old@norm}{\@old@norm*}}


% --------------------- %
% -- VECTOR PRODUCTS -- %
% --------------------- %

\newcommand\dotprod[2]{%
	#1 \cdot #2%
}


\newcommand\adotprod{\@ifstar{\@adotprod@star}{\@adotprod@no@star}}

\newcommand\@adotprod@star[2]{%
	\ensuremath{\langle \, #1 \mid #2 \, \rangle}%
}

\newcommand\@adotprod@no@star[2]{%
	\ensuremath{\left\langle \, #1 \, \left| \,  \vphantom{#1} #2 \right. \, \right\rangle}%
}


\newcommand\crossprod[2]{%
	#1 \wedge #2%
}


% --------------------------- %
% -- CARTESIAN COORDINATES -- %
% --------------------------- %

\newcommand\coord{\@ifstar{\@coord@star}{\@coord@no@star}}

% ARG 1 = Separator: |
% ARG 2 = All parts: what the user types !
% ARG 3 = Before   : nothing here
% ARG 4 = Between  : ;
% ARG 5 = After    : nothing here
\newcommand\@coord@no@star[1]{%
	\left( \,%
		\makemultiargument{|}{#1}{}{\lymathsep}{}%
	 \, \right)%
}

\newcommand\@coord@star[1]{%
	( \,%
		\makemultiargument{|}{#1}{}{\lymathsep}{}%
	\, )%
}


\newcommand\vcoord{\@ifstar{\@vcoord@star}{\@vcoord@no@star}}

\newcommand\@vcoord@no@star[1]{%
	\makemultiargument{|}{#1}{\begin{pmatrix}}{\\}{\end{pmatrix}}%
}

\newcommand\@vcoord@star[1]{%
	\makemultiargument{|}{#1}{\begin{bNiceMatrix}}{\\}{\end{bNiceMatrix}}%
}


% -------------------- %
% -- CARTESIAN AXES -- %
% -------------------- %

% Sources : see the sources of the macros for continued fractions.

% General naming of axes
\def\@axes@comafy@#1|#2\@nil{%
	\@ifmtarg{#2}{%
		#1%
	}{%
		#1 , \@axes@comafy@#2\@nil%
	}%
}

\newcommand\axes{\@ifstar{\@axes@star}{\@axes@no@star}}

\newcommand\@axes@no@star[1]{%
	\@axes@no@star@splitter@#1|\@nil%
}
\def\@axes@no@star@splitter@#1|#2\@nil{%
	\ensuremath{\@interval@tool@no@star{(}{#1}{;}{\@axes@comafy@#2\@nil}{)}}%
}

\newcommand\@axes@star[1]{%
	\@axes@star@splitter@#1|\@nil%
}
\def\@axes@star@splitter@#1|#2\@nil{%
	\ensuremath{\@interval@tool@star{(}{#1}{;}{\@axes@comafy@#2\@nil}{)}}%
}

% Geometric points for naming some axes
\def\@axes@comafy@gptify@#1|#2\@nil{%
	\@ifmtarg{#2}{%
		\pt{#1}%
	}{%
		\pt{#1} , \@axes@comafy@gptify@#2\@nil%
	}%
}

\newcommand\paxes[1]{%
	\@paxes@splitter@#1|\@nil%
}
\def\@paxes@splitter@#1|#2\@nil{%
	\ensuremath{\@interval@tool@no@star{(}{\pt{#1}}{;}{\@axes@comafy@gptify@#2\@nil}{)}}%
}

% Vectors for naming some axes
\def\@axes@comafy@vectify@#1|#2\@nil{%
	\@ifmtarg{#2}{%
		\vect{\trim@spaces{#1}}%
	}{%
		\vect{\trim@spaces{#1}} , \@axes@comafy@vectify@#2\@nil%
	}%
}

\newcommand\vaxes[1]{%
	\@vaxes@splitter@#1|\@nil%
}
\def\@vaxes@splitter@#1|#2\@nil{%
	\ensuremath{\@interval@tool@no@star{(}{#1}{;}{\@axes@comafy@vectify@#2\@nil}{)}}%
}

% Geometric points and vectors for naming some axes
\newcommand\pvaxes[1]{%
	\@pvaxes@splitter@#1|\@nil%
}
\def\@pvaxes@splitter@#1|#2\@nil{%
	\ensuremath{\@interval@tool@no@star{(}{\pt{#1}}{;}{\@axes@comafy@vectify@#2\@nil}{)}}%
}


% --------- %
% -- ARC -- %
% --------- %

\newcommand\arc{\@ifstar{\@arc@star}{\@arc@no@star}}
\newcommand*\@arc@star[2]{\wideparen{\@no@point{#1}}\vphantom{#1}_{#2}}
\newcommand*\@arc@no@star[1]{\wideparen{\@no@point{#1}}}


% --------------------- %
% -- ANGLE GEOMETRIC -- %
% --------------------- %

% Source : http://forum.mathematex.net/latex-f6/arc-dont-le-nom-comporte-un-indice-t12392.html#p120204

\newcommand\anglein{\@ifstar{\@anglein@star}{\@anglein@no@star}}
\newcommand*\@anglein@star[2]{\widehat{\@no@point{#1}}\vphantom{#1}_{#2}}
\newcommand*\@anglein@no@star[1]{\widehat{\@no@point{#1}}}


% -------------------- %
% -- ANGLE ORIENTED -- %
% -------------------- %

\newcommand\angleorient{\@ifstar{\@angleorient@star}{\@angleorient@no@star}}

\newcommand\@angleorient@star[2]{%
	\@interval@tool@star{(}{\, #1}{\lymathsep}{#2\, }{)}%
}

\newcommand\@angleorient@no@star[2]{%
	\@interval@tool@no@star{(}{\, #1}{\lymathsep}{#2\, }{)}%
}


% ------------------------ %
% -- CONTINUED FRACTION -- %
% ------------------------ %

% Sources :
%    * https://groups.google.com/forum/?hl=fr&fromgroups#!topic/fr.comp.text.tex/UrUZiurKwm0
%    * http://tex.stackexchange.com/questions/68190/continued-fraction-in-inline-equations/68196#68196
%    * http://tex.stackexchange.com/questions/23432/how-to-create-my-own-math-operator-with-limits

% Operator
\newcommand\contfracope{%
	\operatornamewithlimits{%
		\mathchoice{% * Display style
			\vcenter{\hbox{\huge $\mathcal{K}$}}%
		}{%           * Text style
			\vcenter{\hbox{\Large $\mathcal{K}$}}%
		}{%           * Script style
			\mathrm{\mathcal{K}}%
		}{%           * Script script style
			\mathrm{\mathcal{K}}%
		}
	}
}

% Single continued fraction (useful ?)
\newcommand\singlecontfrac[2]{%
	\begin{array}{@{}c@{}}%
		\multicolumn{1}{c|}{#1}%
		\\%
		\hline%
		\multicolumn{1}{|c}{#2}%
	\end{array}%
}

% Standard continued fraction
\newcommand\contfrac{\@ifstar{\@contfrac@star}{\@contfrac@no@star}}

\newcommand\@contfrac@no@star[1]{%
	\@contfrac@no@star@recu@#1|\@nil%
}
\def\@contfrac@no@star@recu@#1|#2\@nil{%
	\@ifmtarg{#2}{%
		#1%
	}{%
		#1 + \cfrac{1}{\@contfrac@no@star@recu@#2\@nil}%
	}%
}

\newcommand\@contfrac@star[1]{%
	\@contfrac@star@before@#1|\@nil%
}
\def\@contfrac@star@before@#1|#2\@nil{%
	\@ifmtarg{#2}{%
    	#1%
    }{%
    	#1 \@contfrac@star@recu@#2\@nil%
    }%
}
\def\@contfrac@star@recu@#1|#2\@nil{%
	\@ifmtarg{#2}{%
    	+ \singlecontfrac{1}{#1}%
    }{%
    	+ \singlecontfrac{1}{#1} \@contfrac@star@recu@#2\@nil%
    }%
}

% Generalized continued fraction
\newcommand\contfracgene{\@ifstar{\@contfracgene@star}{\@contfracgene@no@star}}

\newcommand\@contfracgene@no@star[1]{%
	\@contfracgene@no@star@recu@#1||\@nil%
}
\def\@contfracgene@no@star@recu@#1|#2|#3\@nil{%
	\@ifmtarg{#2}{%
		#1%
	}{%
		#1 + \cfrac{#2}{\@contfracgene@no@star@recu@#3\@nil}%
	}%
}


\newcommand\@contfracgene@star[1]{%
	\@contfracgene@star@before@#1|\@nil%
}
\def\@contfracgene@star@before@#1|#2\@nil{%
	\@ifmtarg{#2}{%
    	#1%
    }{%
    	#1 \@contfracgene@star@recu@#2\@nil%
    }%
}
\def\@contfracgene@star@recu@#1|#2|#3\@nil{%
    \@ifmtarg{#3}{%
        + \singlecontfrac{#1}{#2}%
    }{%
        + \singlecontfrac{#1}{#2} \@contfracgene@star@recu@#3\@nil%
    }%
}


% ----------------------- %
% -- POLYNOMIAL AND CO -- %
% ----------------------- %

\newcounter{@nb@decorators}

% Argument 1: the set
% Argument 2: the variable(s)
% Argument 3: the 1st decorator
% Argument 4: the 2nd decorator
% Argument 5: the number of decorators
\newcommand\@special@algebra@set[5]{%
	\ensuremath{%
		#1 \! %
		\ifx1#5
			\@interval@tool@star{#3}{}{%
				\,\makemultiargument{|}{#2}{}{\lymathsep}{}\,%
			}{}{#4}%
		\else
			\@interval@tool@star{#3}{}{%
				\@interval@tool@star{#3}{}{%
					\, \makemultiargument{|}{#2}{}{\lymathsep}{} \,%
				}{}{#4}%
			}{}{#4}%
		\fi
	}
}


\newcommand\polyset[2]{%
	\@special@algebra@set{#1}{#2}{[}{]}{1}%
}


\newcommand\polyfracset[2]{%
	\@special@algebra@set{#1}{#2}{(}{)}{1}%
}


\newcommand\serieset[2]{%
	\@special@algebra@set{#1}{#2}{[}{]}{2}%
}


\newcommand\seriefracset[2]{%
	\@special@algebra@set{#1}{#2}{(}{)}{2}%
}


\newcommand\polylaurentset[2]{%
	\@special@algebra@set{#1}{#2}{\{}{\}}{1}%
}

\newcommand\serielaurentset[2]{%
	\@special@algebra@set{#1}{#2}{\{}{\}}{2}%
}
