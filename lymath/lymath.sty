% ----------------------- %
% -- PACKAGES REQUIRED -- %
% ----------------------- %

\RequirePackage{amsmath}
\RequirePackage{amssymb}
\RequirePackage{bm}
\RequirePackage{calc}
\RequirePackage{centernot}
\RequirePackage{dsfont}
\PassOptionsToPackage{f}{esvect}
\RequirePackage{esvect}
\RequirePackage{etoolbox}
\RequirePackage{forest}
\RequirePackage{forloop}
\RequirePackage{graphicx}
\RequirePackage{ifmtarg}
\RequirePackage{mathrsfs}
\RequirePackage{mathtools}
\RequirePackage{nicematrix}
\RequirePackage{relsize}
\RequirePackage{simplekv}
\RequirePackage{stackengine}
\RequirePackage{stmaryrd}
\RequirePackage{tikz}
\RequirePackage{tkz-tab}
\RequirePackage{trimspaces}
\PassOptionsToPackage{Symbolsmallscale}{upgreek}
\RequirePackage{upgreek}
\RequirePackage{witharrows}
\RequirePackage{xparse}
\RequirePackage{xstring}
\RequirePackage{yhmath}


% ------------------ %
% -- COMMON TOOLS -- %
% ------------------ %

% Settable texts
\@ifpackagewith{babel}{french}{
    \newcommand\lymathsep{;}
    \newcommand\lymathsubsep{,}

% == Decorations - FRENCH - START == %
    \newcommand\textopappli{appli}
    \newcommand\textopchoice{choix}
    \newcommand\textopcond{cond}
    \newcommand\textopcons{cons}
    \newcommand\textopdef{d√©f}
    \newcommand\textopplot{graph}
    \newcommand\textophyp{hyp}
    \newcommand\textopid{id}
    \newcommand\textoptest{?}
% == Decorations - FRENCH - END == %
}{
    \newcommand\lymathsep{,}
    \newcommand\lymathsubsep{;}

% == Decorations - ENGLISH - START == %
    \newcommand\textopappli{appli}
    \newcommand\textopchoice{choice}
    \newcommand\textopcond{cond}
    \newcommand\textopcons{cons}
    \newcommand\textopdef{def}
    \newcommand\textopplot{plot}
    \newcommand\textophyp{hyp}
    \newcommand\textopid{id}
    \newcommand\textoptest{?}
% == Decorations - ENGLISH - END == %
}


\newcommand\expltxtspacein{2em}


% Tools - Apply same macro to all arguments

% #1        : main macro
% #2        : macro to apply to arguments
% #3 and #4 : the two arguments
\newcommand\@apply@macro@two@args[4]{%
    #1{#2{#3}}{#2{#4}}%
}


% Tools - Deco over a math symbol

\newcommand\@over@math@symbol[2]{%
	\mathrel{\overset{\mathrm{\text{\raisebox{.5ex}{#1}}}}{#2}}%
}


% Tools - Intervals

\newcommand\@extra@phantom{%
    \vphantom{\relsize{1.25}{\text{$\displaystyle F_1^2$}}}%
}

\newcommand\@interval@tool@star[5]{%
    \ensuremath{ \left#1 \@extra@phantom \right. \!\! #2 #3 #4 \left. \@extra@phantom \!\! \right#5}%
}

\newcommand\@interval@tool@no@star[5]{\ensuremath{ \left#1 #2 #3 #4 \right#5}}


% Tools - Multi-arguments
%
% Source : the following lines come directly for the following post
%
%    * https://tex.stackexchange.com/a/475291/6880

\ExplSyntaxOn
% General purpose macro for defining other macros
    \NewDocumentCommand{\makemultiargument}{mmmmmo}{
        \lymath_multiarg:nnnnnn{#1}{#2}{#3}{#4}{#5}{#6}
    }
 
% Allocate a private variable
    \seq_new:N \l__lymath_generic_seq

% The internal version of the general purpose macro
    \cs_new_protected:Nn \lymath_multiarg:nnnnnn{
        % #1 = separator
        % #2 = multiargument
        % #3 = code before
          % #4 = code between
          % #5 = code after
          % #6 = ornament to items

        % A group allows nesting
        \group_begin:
         % Split the multiargument into parts
        \seq_set_split:Nnn \l__lymath_generic_seq { #1 } { #2 }
        % Apply the ornament to the items
          \tl_if_novalue:nF { #6 }{
            \seq_set_eq:NN \l__lymath_temp_seq \l__lymath_generic_seq
            \seq_set_map:NNn \l__lymath_generic_seq \l__lymath_generic_seq { #6 }
           }
        % Execute the <code before>
          #3
        % Deliver the items, with the chosen material between them
          \seq_use:Nn \l__lymath_generic_seq { #4 }
          % Execute the <code after>
         #5
          % End the group started at the beginning
          \group_end:
    }    
\ExplSyntaxOff


% Source for DeclareMathMacro :
%    * http://forum.mathematex.net/latex-f6/bonnes-commandes-de-base-t12278.html

% One useful tool

\newcommand\DeclareMathMacro[2]{%
    \expandafter\let\csname original@\expandafter\@gobble\string#1\endcsname=#1
    \expandafter\def\csname\expandafter\@gobble\string#1\endcsname{%
        \relax%
        \ifmmode#2%
        \else%
            \csname original@\expandafter\@gobble\string#1\expandafter\endcsname%
        \fi%
    }%
}


% ----------------------- %
% -- SPACES SEMI COLON -- %
% ----------------------- %

% Sources :
%    * http://forum.mathematex.net/latex-f6/espacement-autour-des-points-virgules-en-mode-maths-t8379.html#p83226
%    * http://forum.mathematex.net/latex-f6/espace-autour-d-un-point-virgule-en-mode-maths-t12323.html#p119334

% This command is adapted from the one given in the following link fro factorial :
% http://www.math.bme.hu/latex/magyar_pre_tug2004.pdf#page=28

\@ifpackagewith{babel}{french}{
    \def\fixmathspacing#1#2#3{%
        \def#1{#3}%
        \expandafter\addto\csname \expandafter
        \ifx\csname mathoptions@on\endcsname\relax% detect nath.sty
            check@mathfonts%
        \else
            mathoptions@on%
        \fi
        \endcsname{%
            \catcode`#212 \mathcode`#2"8000
            \begingroup\lccode`~`#2\lowercase{\endgroup\def~}{#1}
        }
    }

    \fixmathspacing{\fixedsemicolon}{;}{\mathclose{}\mathpunct{}\mathpunct{\mathchar"603B}}
}{}


% ------------ %
% -- SPACES -- %
% ------------ %

% Fractions

\let\stdfrac\frac
\renewcommand\frac[2]{\stdfrac{\, #1 \,}{\, #2 \,}}

\let\stddfrac\dfrac
\renewcommand\dfrac[2]{\stddfrac{\, #1 \,}{\, #2 \,}}


% Square roots

\let\stdsqrt\sqrt
\renewcommand\sqrt[2][]{%
    \if\relax\detokenize{#1}\relax\stdsqrt{#2\,}%
    \else\stdsqrt[\leftroot{3}#1]{#2\,}%
    \fi%
}


% Logic negation roots

\let\stdneg\neg
\renewcommand\neg{%
    \stdneg\,
}


% ---------------- %
% -- DSUM DPROD -- %
% ---------------- %

\newcommand\dprod{\prod\limits}
\newcommand\dsum{\sum\limits}


% ---------------------- %
% -- EQUAL SIGNS N CO -- %
% ---------------------- %

% Sources
%    * https://tex.stackexchange.com/a/506745/6880
%    * https://tex.stackexchange.com/a/510011/6880

\newcommand{\my@hat@eq}[2]{%
  \begingroup
  \sbox\z@{$\m@th#1=$}%
  \ooalign{%
    \hidewidth\raisebox{-0.3\ht\z@}{$\m@th#1\widehat{}$}\hidewidth\cr
    \box\z@\cr
  }%
  \endgroup
}

% == Decorated versions - START == %

\newcommand\eqappli{\@over@math@symbol{\textopappli}{=}}
\newcommand\eqchoice{\@over@math@symbol{\textopchoice}{=}}
\newcommand\eqcond{\@over@math@symbol{\textopcond}{=}}
\newcommand\eqcons{\@over@math@symbol{\textopcons}{=}}
\newcommand\eqdef{\@ifstar{\@eqdef@star}{\@eqdef@no@star}}
\newcommand\@eqdef@no@star{\@over@math@symbol{\textopdef}{=}}
\newcommand\@eqdef@star{\coloneqq}

\newcommand\eqhyp{\@over@math@symbol{\textophyp}{=}}
\newcommand\eqid{\@ifstar{\@eqid@star}{\@eqid@no@star}}
\newcommand\@eqid@no@star{\@over@math@symbol{\textopid}{=}}
\newcommand\@eqid@star{\rightleftharpoons}

\newcommand\eqplot{\@over@math@symbol{\textopplot}{=}}
\newcommand\eqtest{\@over@math@symbol{\textoptest}{=}}

\newcommand\neqappli{\@over@math@symbol{\textopappli}{\neq}}
\newcommand\neqchoice{\@over@math@symbol{\textopchoice}{\neq}}
\newcommand\neqcond{\@over@math@symbol{\textopcond}{\neq}}
\newcommand\neqcons{\@over@math@symbol{\textopcons}{\neq}}
\newcommand\neqhyp{\@over@math@symbol{\textophyp}{\neq}}
\newcommand\neqid{\@over@math@symbol{\textopid}{\neq}}
\newcommand\neqtest{\@over@math@symbol{\textoptest}{\neq}}

\newcommand\lappli{\@over@math@symbol{\textopappli}{<}}
\newcommand\lchoice{\@over@math@symbol{\textopchoice}{<}}
\newcommand\lcond{\@over@math@symbol{\textopcond}{<}}
\newcommand\lcons{\@over@math@symbol{\textopcons}{<}}
\newcommand\lhyp{\@over@math@symbol{\textophyp}{<}}
\newcommand\lplot{\@over@math@symbol{\textopplot}{<}}
\newcommand\ltest{\@over@math@symbol{\textoptest}{<}}

\newcommand\gappli{\@over@math@symbol{\textopappli}{>}}
\newcommand\gchoice{\@over@math@symbol{\textopchoice}{>}}
\newcommand\gcond{\@over@math@symbol{\textopcond}{>}}
\newcommand\gcons{\@over@math@symbol{\textopcons}{>}}
\newcommand\ghyp{\@over@math@symbol{\textophyp}{>}}
\newcommand\gplot{\@over@math@symbol{\textopplot}{>}}
\newcommand\gtest{\@over@math@symbol{\textoptest}{>}}

\newcommand\leqappli{\@over@math@symbol{\textopappli}{\leq}}
\newcommand\leqchoice{\@over@math@symbol{\textopchoice}{\leq}}
\newcommand\leqcond{\@over@math@symbol{\textopcond}{\leq}}
\newcommand\leqcons{\@over@math@symbol{\textopcons}{\leq}}
\newcommand\leqhyp{\@over@math@symbol{\textophyp}{\leq}}
\newcommand\leqplot{\@over@math@symbol{\textopplot}{\leq}}
\newcommand\leqtest{\@over@math@symbol{\textoptest}{\leq}}

\newcommand\geqappli{\@over@math@symbol{\textopappli}{\geq}}
\newcommand\geqchoice{\@over@math@symbol{\textopchoice}{\geq}}
\newcommand\geqcond{\@over@math@symbol{\textopcond}{\geq}}
\newcommand\geqcons{\@over@math@symbol{\textopcons}{\geq}}
\newcommand\geqhyp{\@over@math@symbol{\textophyp}{\geq}}
\newcommand\geqplot{\@over@math@symbol{\textopplot}{\geq}}
\newcommand\geqtest{\@over@math@symbol{\textoptest}{\geq}}

% == Decorated versions - END == %


% --------------- %
% -- OPERATORS -- %
% --------------- %

% Vertical versions 

\newcommand\vliesimp{\mathrel{\Uparrow}}
\newcommand\vimplies{\mathrel{\Downarrow}}
\newcommand\viff{\mathrel{\Updownarrow}}

\newcommand\notvliesimp{\centernot\vliesimp}
\newcommand\notvimplies{\centernot\vimplies}
\newcommand\notviff{\centernot\viff}


% Horizontal versions



% == Decorated versions - START == %

\newcommand\notiff{\centernot\iff}
\newcommand\notimplies{\centernot\implies}
\newcommand\liesimp{\mathrel{\Longleftarrow}}
\newcommand\notliesimp{\centernot\liesimp}

\newcommand\iffappli{\@over@math@symbol{\textopappli}{\iff}}
\newcommand\iffchoice{\@over@math@symbol{\textopchoice}{\iff}}
\newcommand\iffcond{\@over@math@symbol{\textopcond}{\iff}}
\newcommand\iffcons{\@over@math@symbol{\textopcons}{\iff}}
\newcommand\iffhyp{\@over@math@symbol{\textophyp}{\iff}}
\newcommand\ifftest{\@over@math@symbol{\textoptest}{\iff}}

\newcommand\notiffappli{\@over@math@symbol{\textopappli}{\notiff}}
\newcommand\notiffchoice{\@over@math@symbol{\textopchoice}{\notiff}}
\newcommand\notiffcond{\@over@math@symbol{\textopcond}{\notiff}}
\newcommand\notiffcons{\@over@math@symbol{\textopcons}{\notiff}}
\newcommand\notiffhyp{\@over@math@symbol{\textophyp}{\notiff}}
\newcommand\notifftest{\@over@math@symbol{\textoptest}{\notiff}}

\newcommand\impliesappli{\@over@math@symbol{\textopappli}{\implies}}
\newcommand\implieschoice{\@over@math@symbol{\textopchoice}{\implies}}
\newcommand\impliescond{\@over@math@symbol{\textopcond}{\implies}}
\newcommand\impliescons{\@over@math@symbol{\textopcons}{\implies}}
\newcommand\implieshyp{\@over@math@symbol{\textophyp}{\implies}}
\newcommand\impliestest{\@over@math@symbol{\textoptest}{\implies}}

\newcommand\notimpliesappli{\@over@math@symbol{\textopappli}{\notimplies}}
\newcommand\notimplieschoice{\@over@math@symbol{\textopchoice}{\notimplies}}
\newcommand\notimpliescond{\@over@math@symbol{\textopcond}{\notimplies}}
\newcommand\notimpliescons{\@over@math@symbol{\textopcons}{\notimplies}}
\newcommand\notimplieshyp{\@over@math@symbol{\textophyp}{\notimplies}}
\newcommand\notimpliestest{\@over@math@symbol{\textoptest}{\notimplies}}

\newcommand\liesimpappli{\@over@math@symbol{\textopappli}{\liesimp}}
\newcommand\liesimpchoice{\@over@math@symbol{\textopchoice}{\liesimp}}
\newcommand\liesimpcond{\@over@math@symbol{\textopcond}{\liesimp}}
\newcommand\liesimpcons{\@over@math@symbol{\textopcons}{\liesimp}}
\newcommand\liesimphyp{\@over@math@symbol{\textophyp}{\liesimp}}
\newcommand\liesimptest{\@over@math@symbol{\textoptest}{\liesimp}}

\newcommand\notliesimpappli{\@over@math@symbol{\textopappli}{\notliesimp}}
\newcommand\notliesimpchoice{\@over@math@symbol{\textopchoice}{\notliesimp}}
\newcommand\notliesimpcond{\@over@math@symbol{\textopcond}{\notliesimp}}
\newcommand\notliesimpcons{\@over@math@symbol{\textopcons}{\notliesimp}}
\newcommand\notliesimphyp{\@over@math@symbol{\textophyp}{\notliesimp}}
\newcommand\notliesimptest{\@over@math@symbol{\textoptest}{\notliesimp}}

% == Decorated versions - END == %


% ----------------- %
% -- QUANTIFIERS -- %
% ----------------- %

\newcommand\existsone{\exists\kern0.1em !}
\newcommand\nexistsone{\nexists\kern0.1em !}

\newcommand\existmulti[1]{\exists_{\kern0.1em #1}}
\newcommand\nexistmulti[1]{\nexists_{\kern0.1em #1}}


% ---------------------------- %
% -- CALCULATIONS EXPLAINED -- %
% ---------------------------- %

% Without a table like writing

%    * Common tools
\newcommand\expltxt[1]{%
    \text{\color{blue} \footnotesize \itshape \{ #1 \}}%
}

\newcommand\expltxtup[1]{%
    \expltxt{$\uparrow$ #1 $\uparrow$}%
}

\newcommand\expltxtdown[1]{%
    \expltxt{$\downarrow$ #1 $\downarrow$}%
}

\newcommand\explnext{\@ifstar{\@explnext@star}{\@explnext@no@star}}
\newcommand\@explnext@no@star{}
\newcommand\@explnext@star{}

\newcommand\@explain@sep@{=}


%    * University version 

\newcommand\@explnext@university@no@star[2][\@explain@sep@]{
    &&\\
    &
    {#1}
    \if\relax\detokenize{#2}\relax\else
        {} \kern\expltxtspacein \expltxt{#2}
    \fi
    &&\\
    &
}

\newcommand\@explnext@university@separation{
    &&\\
    &
}

\newcommand\@explnext@university@star[3][\@explain@sep@]{
    \if\relax\detokenize{#2}\relax%
        \if\relax\detokenize{#3}\relax%
            \PackageError{lymath}{two empty arguments}%
                                 {at least one none empty text is needed}
        \fi%
    \fi%
    \if\relax\detokenize{#2}\relax\else
        \@explnext@university@separation{}
        {#1}\kern\expltxtspacein{}\expltxtdown{#2}
    \fi%
    \if\relax\detokenize{#3}\relax\else%
        \@explnext@university@separation{}
        \if\relax\detokenize{#2}\relax%
            {#1}%
        \else%
            \phantom{#1}%
        \fi
        \kern\expltxtspacein \expltxtup{#3}
    \fi%
    \@explnext@university@separation{}
}

\newenvironment{explain}[1][=]{
    \setlength{\abovedisplayskip}{0pt}%
    \setlength{\belowdisplayskip}{0pt}%
    \renewcommand\@explain@sep@{#1}%
    \renewcommand\@explnext@no@star\@explnext@university@no@star%
    \renewcommand\@explnext@star\@explnext@university@star%
    \csname flalign*\endcsname
        &
}{
    \csname endflalign*\endcsname
}


%    * Middle school version

\newcommand\@explnext@middle@school@no@star[2][\@explain@sep@]{
    \ifbool{@aexplain@starred@}{%
        \ifbool{@start@aexplain@}{%
            \if\relax\detokenize{#2}\relax\else
                \PackageError{lymath}{illegal argument to start aexplain*}%
                                     {no argument for the first use of explnext in aexplain*}
            \fi
            \global\boolfalse{@start@aexplain@}%
        }{
        \if\relax\detokenize{#2}\relax\else
            \Arrow[tikz = <->]{#2}
        \fi
        \\
        }
    }{
         \if\relax\detokenize{#2}\relax\else
            \Arrow[tikz = <->]{#2}
        \fi
        \\
    }%
    &#1
}

% Source
%    * https://tex.stackexchange.com/a/549370/6880

\ExplSyntaxOn
\NewDocumentCommand \@double@arrow@ { m m }
  {
    \hbox_set:Nn \l_tmpa_box { #1 }
    \dim_set:Nn \l_tmpa_dim { \box_wd:N \l_tmpa_box + 1.5em }
    \Arrow [tikz = ->] { #1 }
    \use:x { \Arrow [xoffset=\dim_use:N \l_tmpa_dim , tikz = <-] } { #2 }
  }
\ExplSyntaxOff

\newcommand\@explnext@middle@school@star[3][\@explain@sep@]{
    \if\relax\detokenize{#2}\relax%
        \if\relax\detokenize{#3}\relax%
            \PackageError{lymath}{two empty arguments}%
                                 {at least one none empty text is needed}
        \else%
            \Arrow[tikz = <-]{#3}%
        \fi%
    \else%
        \if\relax\detokenize{#3}\relax%
            \Arrow[tikz = ->]{#2}%
        \else%
            \@double@arrow@{#2}{#3}
        \fi%
    \fi%
    \\
    &#1
}

\newbool{@start@aexplain@} 
\newbool{@aexplain@starred@} 

\newenvironment{aexplain}[1][=]{
    \renewcommand\@explnext@no@star\@explnext@middle@school@no@star%
    \renewcommand\@explnext@star\@explnext@middle@school@star%
    \renewcommand\@explain@sep@{#1}%
    \boolfalse{@aexplain@starred@}%
    \boolfalse{@start@aexplain@}%
    $\WithArrows[tikz=blue]
        &\phantom{{}\@explain@sep@{}}
}{
    \endWithArrows$
}

\newenvironment{aexplain*}[1][=]{
    \renewcommand\@explnext@no@star\@explnext@middle@school@no@star%
    \renewcommand\@explnext@star\@explnext@middle@school@star%
    \renewcommand\@explain@sep@{#1}%
    \booltrue{@aexplain@starred@}%
    \booltrue{@start@aexplain@}%
    $\WithArrows[tikz=blue]
}{
    \endWithArrows$
}


% With a table like writing

%    * Common tools

\newcommand\explref{\@ifstar{\@explref@star}{\@explref@no@star}}

\newcommand\@explref@no@star[1]{%
    \framebox[1.5em]{#1}%
}

\newcommand\@explref@star[1]{%
    \@explref@no@star{\ref{#1}}%
}

\newcommand\demostep{}


%    * University version 

\newcounter{@demo@explain@id}


\newcommand\@expl@id[1]{%
    \framebox[1.5em]{\the@demo@explain@id}%
    \if\relax\detokenize{#1}\relax\else%
        \addtocounter{@demo@explain@id}{-1}%
        \refstepcounter{@demo@explain@id}\label{#1}
    \fi
    \stepcounter{@demo@explain@id}%
}


\newbool{@start@demo@explain@} 


\newcommand\@demostep@no@star[1][]{%
    \ifbool{@start@demo@explain@}{%
        \global\boolfalse{@start@demo@explain@}%
    }{%
        \\
    }%
    \@expl@id{#1}
    &
}


\setKVdefault[@demo@explain@keys]{%
    start = 1,
    hyps  = {},
    hyp   = {},
    ccl   = {}
}


\newenvironment{demoexplain}[1][]{
	\renewcommand\demostep\@demostep@no@star
    \useKVdefault[@demo@explain@keys]
    \setKV[@demo@explain@keys]{#1}
    %
    \ifthenelse{\equal{\useKV[@demo@explain@keys]{start}}{last}}{
    % If no environment has been used before !
        \ifnum\value{@demo@explain@id}<1
            \setcounter{@demo@explain@id}{1}
        \fi
    }{%
        \setcounter{@demo@explain@id}{\useKV[@demo@explain@keys]{start}}%
    }%
    \def\hyps{\useKV[@demo@explain@keys]{hyps}}
    \def\hyp{\useKV[@demo@explain@keys]{hyp}}
    \edef\ccl{\useKV[@demo@explain@keys]{ccl}}
    %
    \if\relax\hyps\relax\else%
        \if\relax\hyp\relax\else%
            \PackageError{lymath}{hyps and hyp are both used}%
                                   {use either hyps or hyp, or none of them}
        \fi
    \fi
    %
    \if\relax\hyps\relax\else%
        \underline{D√©monstration sous les hypoth√®ses} : \hyps

        \medskip
    \fi
    \if\relax\hyp\relax\else%
        \underline{D√©monstration sous la seule hypoth√®se} : \hyp

        \medskip
    \fi
    \booltrue{@start@demo@explain@}
    \begin{tabular}{lll}
}{
    \end{tabular}
    \if\relax\ccl\relax\else%
        
        \medskip

        \underline{Conclusion} : \ccl
    \fi
}






%    * Middle school version

\newcounter{@demo@explain@star@id}


\newcommand\@expl@star@id[1]{%
    \the@demo@explain@star@id%
    \if\relax\detokenize{#1}\relax\else%
        \addtocounter{@demo@explain@star@id}{-1}%
        \refstepcounter{@demo@explain@star@id}\label{#1}
    \fi
    \stepcounter{@demo@explain@star@id}%
}


\newcommand\@demostep@star[1][]{%
    \\
    \hline
    \@expl@star@id{#1}
    &
}


\setKVdefault[@demo@explain@star@keys]{%
    start = 1
}


\newenvironment{demoexplain*}[1][]{
	\renewcommand\demostep\@demostep@star
    \useKVdefault[@demo@explain@star@keys]
    \setKV[@demo@explain@star@keys]{#1}
    %
    \ifthenelse{\equal{\useKV[@demo@explain@star@keys]{start}}{last}}{
    % If no environment has been used before !
        \ifnum\value{@demo@explain@star@id}<1
            \setcounter{@demo@explain@star@id}{1}
        \fi
    }{%
        \setcounter{@demo@explain@star@id}{\useKV[@demo@explain@star@keys]{start}}%
    }%
    \small
    \renewcommand{\arraystretch}{1.5}
    \begin{tabular}{c|p{0.29\linewidth}|p{0.29\linewidth}|p{0.29\linewidth}}
    	\textbf{\footnotesize R√©f.}
			& \textbf{\footnotesize Je sais que...}
	        & \textbf{\footnotesize Propri√©t√© ou fait utilis√©}
	        & \textbf{\footnotesize Cons√©quence}
}{
    \end{tabular}
    \renewcommand{\arraystretch}{1}
}


% ------------------ %
% -- GENERAL SETS -- %
% ------------------ %

% General sets
\newcommand\setgene{\@ifstar{\@setgene@star}{\@setgene@no@star}}
\newcommand\@setgene@no@star[1]{\ensuremath{\@interval@tool@no@star{\{}{#1}{}{}{\}}}}
\newcommand\@setgene@star[1]{\ensuremath{\@interval@tool@star{\{}{#1}{}{}{\}}}}

% Probabilistic sets
\newcommand\setproba{\@ifstar{\@setproba@star}{\@setproba@no@star}}

\newcommand\@setproba@no@star[1]{
    \IfSubStr{,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,}{,#1,}{
        \mathcal{#1}
    }{%
        \PackageError{lymath}{Command << setproba >> only accepts single upper case letters}%
    }
}

\newcommand\@setproba@star[2]{%
    \@setproba@no@star{#1}_{#2}
}

% Geometric sets
%
% With ''mathscr'', we only have the upper case letters.
% So we use the following trick for lower case letters.
%
% Source:
%    * page 68 de ''The Comprehensive LATEX Symbol List''
\DeclareMathAlphabet{\mathpzc}{OT1}{pzc}{m}{it}

\newcommand\setgeo{\@ifstar{\@setgeo@star}{\@setgeo@no@star}}

\newcommand\@setgeo@no@star[1]{
    \IfSubStr{,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,}{,#1,}{
        \mathscr{#1}
    }{%
        \IfSubStr{,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,}{,#1,}{
            \mathpzc{#1}
        }{%
            \PackageError{lymath}{Command << fieldset >> only accepts single h, k or upper case letter}%
        }
    }
}

\newcommand\@setgeo@star[2]{%
    \@setgeo@no@star{#1}_{#2}
}

% Sets for algebra
%
% Only the upper case letters and also h and k.
%
% With ''\mathbb'', there are only the upper case letters.
\newcommand\setalge{\@ifstar{\@setalge@star}{\@setalge@no@star}}

\newcommand\@setalge@no@star[1]{
    \IfSubStr{,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,h,k,}{,#1,}{
        \mathds{#1}
    }{%
        \PackageError{lymath}{Command << fieldset >> only accepts letters h or k alone, and upper case letters}%
    }
}

\newcommand\@setalge@star[2]{%
    \@setalge@no@star{#1}_{#2}
}

% Tools for classical sets
\newcommand\setpos{\textbf{\tiny+}}
\newcommand\setneg{\vphantom{\setpos}-}
\newcommand\set@star{\text{*}}

\newcommand\setspecial{\@ifstar{\@setspecial@star}{\@setspecial@no@star}}

\newcommand\@setspecial@no@star[2]{
    \IfEqCase{#2}{
        {s}{ #1^{\set@star} }
        {n}{ #1^{\phantom{\set@star}}_{\setneg} }
        {p}{ #1^{\phantom{\set@star}}_{\setpos} }
        {sn}{ #1^{\set@star}_{\setneg} }
        {sp}{ #1^{\set@star}_{\setpos} }
    }
}

\newcommand\@setspecial@star[2]{
    \IfEqCase{#2}{
        {s}{ #1_{\neq 0} }
        {n}{ #1_{\le 0} }
        {p}{ #1_{\ge 0} }
        {sn}{ #1_{< 0} }
        {sp}{ #1_{> 0} }
    }
}

% The empty set
\newcommand\nullset{%
    \ensuremath{\text{\scalebox{1.2}{$\varnothing$}}}%
}

% List of classical sets - START

\newcommand\NN{\ensuremath{\setalge{N}}}
\newcommand\NNs{\ensuremath{\setspecial{\NN}{s}}}

\newcommand\PP{\ensuremath{\setalge{P}}}

\newcommand\ZZ{\ensuremath{\setalge{Z}}}
\newcommand\ZZp{\ensuremath{\setspecial{\ZZ}{p}}}
\newcommand\ZZn{\ensuremath{\setspecial{\ZZ}{n}}}
\newcommand\ZZs{\ensuremath{\setspecial{\ZZ}{s}}}
\newcommand\ZZsn{\ensuremath{\setspecial{\ZZ}{sn}}}
\newcommand\ZZsp{\ensuremath{\setspecial{\ZZ}{sp}}}

\newcommand\DD{\ensuremath{\setalge{D}}}
\newcommand\DDp{\ensuremath{\setspecial{\DD}{p}}}
\newcommand\DDn{\ensuremath{\setspecial{\DD}{n}}}
\newcommand\DDs{\ensuremath{\setspecial{\DD}{s}}}
\newcommand\DDsn{\ensuremath{\setspecial{\DD}{sn}}}
\newcommand\DDsp{\ensuremath{\setspecial{\DD}{sp}}}

\newcommand\QQ{\ensuremath{\setalge{Q}}}
\newcommand\QQp{\ensuremath{\setspecial{\QQ}{p}}}
\newcommand\QQn{\ensuremath{\setspecial{\QQ}{n}}}
\newcommand\QQs{\ensuremath{\setspecial{\QQ}{s}}}
\newcommand\QQsn{\ensuremath{\setspecial{\QQ}{sn}}}
\newcommand\QQsp{\ensuremath{\setspecial{\QQ}{sp}}}

\newcommand\RR{\ensuremath{\setalge{R}}}
\newcommand\RRp{\ensuremath{\setspecial{\RR}{p}}}
\newcommand\RRn{\ensuremath{\setspecial{\RR}{n}}}
\newcommand\RRs{\ensuremath{\setspecial{\RR}{s}}}
\newcommand\RRsn{\ensuremath{\setspecial{\RR}{sn}}}
\newcommand\RRsp{\ensuremath{\setspecial{\RR}{sp}}}

\newcommand\CC{\ensuremath{\setalge{C}}}
\newcommand\CCs{\ensuremath{\setspecial{\CC}{s}}}

\newcommand\HH{\ensuremath{\setalge{H}}}
\newcommand\HHs{\ensuremath{\setspecial{\HH}{s}}}

\newcommand\OO{\ensuremath{\setalge{O}}}
\newcommand\OOs{\ensuremath{\setspecial{\OO}{s}}}

\newcommand\FF{\ensuremath{\setalge{F}}}
\newcommand\FFp{\ensuremath{\setspecial{\FF}{p}}}
\newcommand\FFn{\ensuremath{\setspecial{\FF}{n}}}
\newcommand\FFs{\ensuremath{\setspecial{\FF}{s}}}
\newcommand\FFsn{\ensuremath{\setspecial{\FF}{sn}}}
\newcommand\FFsp{\ensuremath{\setspecial{\FF}{sp}}}

% List of classical sets - END


% --------------- %
% -- INTERVALS -- %
% --------------- %

% Macros for intervals - START

% Macros for french real intervals

\newcommand\intervalCO{\@ifstar{\@intervalCO@star}{\@intervalCO@no@star}}
\newcommand\@intervalCO@no@star[2]{\ensuremath{\@interval@tool@no@star{[}{#1}{\lymathsep}{#2}{[}}}
\newcommand\@intervalCO@star[2]{\ensuremath{\@interval@tool@star{[}{#1}{\lymathsep}{#2}{[}}}

\newcommand\intervalC{\@ifstar{\@intervalC@star}{\@intervalC@no@star}}
\newcommand\@intervalC@no@star[2]{\ensuremath{\@interval@tool@no@star{[}{#1}{\lymathsep}{#2}{]}}}
\newcommand\@intervalC@star[2]{\ensuremath{\@interval@tool@star{[}{#1}{\lymathsep}{#2}{]}}}

\newcommand\intervalO{\@ifstar{\@intervalO@star}{\@intervalO@no@star}}
\newcommand\@intervalO@no@star[2]{\ensuremath{\@interval@tool@no@star{]}{#1}{\lymathsep}{#2}{[}}}
\newcommand\@intervalO@star[2]{\ensuremath{\@interval@tool@star{]}{#1}{\lymathsep}{#2}{[}}}

\newcommand\intervalOC{\@ifstar{\@intervalOC@star}{\@intervalOC@no@star}}
\newcommand\@intervalOC@no@star[2]{\ensuremath{\@interval@tool@no@star{]}{#1}{\lymathsep}{#2}{]}}}
\newcommand\@intervalOC@star[2]{\ensuremath{\@interval@tool@star{]}{#1}{\lymathsep}{#2}{]}}}

% Macros for american real intervals

\newcommand\intervalCP{\@ifstar{\@intervalCP@star}{\@intervalCP@no@star}}
\newcommand\@intervalCP@no@star[2]{\ensuremath{\@interval@tool@no@star{[}{#1}{\lymathsep}{#2}{)}}}
\newcommand\@intervalCP@star[2]{\ensuremath{\@interval@tool@star{[}{#1}{\lymathsep}{#2}{)}}}

\newcommand\intervalP{\@ifstar{\@intervalP@star}{\@intervalP@no@star}}
\newcommand\@intervalP@no@star[2]{\ensuremath{\@interval@tool@no@star{(}{#1}{\lymathsep}{#2}{)}}}
\newcommand\@intervalP@star[2]{\ensuremath{\@interval@tool@star{(}{#1}{\lymathsep}{#2}{)}}}

\newcommand\intervalPC{\@ifstar{\@intervalPC@star}{\@intervalPC@no@star}}
\newcommand\@intervalPC@no@star[2]{\ensuremath{\@interval@tool@no@star{(}{#1}{\lymathsep}{#2}{]}}}
\newcommand\@intervalPC@star[2]{\ensuremath{\@interval@tool@star{(}{#1}{\lymathsep}{#2}{]}}}

% Macros for discrete intervals

\newcommand\ZintervalCO{\@ifstar{\@ZintervalCO@star}{\@ZintervalCO@no@star}}
\newcommand\@ZintervalCO@no@star[2]{\ensuremath{\@interval@tool@no@star{\llbracket}{#1}{\lymathsep}{#2}{\llbracket}}}
\newcommand\@ZintervalCO@star[2]{\ensuremath{\@interval@tool@star{\llbracket}{#1}{\lymathsep}{#2}{\llbracket}}}

\newcommand\ZintervalC{\@ifstar{\@ZintervalC@star}{\@ZintervalC@no@star}}
\newcommand\@ZintervalC@no@star[2]{\ensuremath{\@interval@tool@no@star{\llbracket}{#1}{\lymathsep}{#2}{\rrbracket}}}
\newcommand\@ZintervalC@star[2]{\ensuremath{\@interval@tool@star{\llbracket}{#1}{\lymathsep}{#2}{\rrbracket}}}

\newcommand\ZintervalO{\@ifstar{\@ZintervalO@star}{\@ZintervalO@no@star}}
\newcommand\@ZintervalO@no@star[2]{\ensuremath{\@interval@tool@no@star{\rrbracket}{#1}{\lymathsep}{#2}{\llbracket}}}
\newcommand\@ZintervalO@star[2]{\ensuremath{\@interval@tool@star{\rrbracket}{#1}{\lymathsep}{#2}{\llbracket}}}

\newcommand\ZintervalOC{\@ifstar{\@ZintervalOC@star}{\@ZintervalOC@no@star}}
\newcommand\@ZintervalOC@no@star[2]{\ensuremath{\@interval@tool@no@star{\rrbracket}{#1}{\lymathsep}{#2}{\rrbracket}}}
\newcommand\@ZintervalOC@star[2]{\ensuremath{\@interval@tool@star{\rrbracket}{#1}{\lymathsep}{#2}{\rrbracket}}}

% Macros for intervals - END


% --------------- %
% -- OPERATORS -- %
% --------------- %

\newcommand\@display@this[3]{\mathop{\raisebox{#1}{\scalebox{#2}{$#3$}}}\limits}

\newcommand\dcup{\@display@this{.05em}{0.8}{\bigcup}}
\newcommand\dsqcup{\@display@this{.05em}{0.8}{\bigsqcup}}
\newcommand\dcap{\@display@this{.05em}{0.8}{\bigcap}}


% ---------------- %
% -- IMAGE N CO -- %
% ---------------- %

\newcommand\card{\@ifstar{\@card@star}{\@card@no@star}}
\DeclareMathMacro{\@card@no@star}{\operatorname{card}}
\newcommand\@card@star{\#}

\DeclareMathMacro{\im}{\operatorname{im}}
\DeclareMathMacro{\ker}{\operatorname{ker}}

\DeclareMathMacro{\dom}{\operatorname{dom}}
\DeclareMathMacro{\codom}{\operatorname{codom}}


% ----------------- %
% -- APPLICATONS -- %
% ----------------- %

\newcommand\@rel@scale[3]{\mathrel{\scalebox{#1}[#2]{$#3$}}}

\newcommand\onetoone{\@rel@scale{1.1}{1.3}{\rightarrowtail}}
\newcommand\onto{\@rel@scale{1.1}{1.3}{\twoheadrightarrow}}
\newcommand\biject{\mathrel{\mathrlap{\onetoone}\mkern0.9mu\onto}}
 
    
\newcommand\@partaial@deco[3]{\stackMath\mathrel{\stackinset{c}{#1}{c}{#2}{\scalebox{1}[0.4]{$\vert$}}{#3}}}

\newcommand\pto{\@partaial@deco{-0.1ex}{0.15ex}{\to}}
\newcommand\ponetoone{\@partaial@deco{0ex}{0ex}{\onetoone}}
\newcommand\ponto{\@partaial@deco{-0.3ex}{0ex}{\onto}}
\newcommand\pbiject{\@partaial@deco{-0.25ex}{0ex}{\biject}}


% ------------------ %
% -- POINT N LINE -- %
% ------------------ %

% Points

\newcommand\pt{\@ifstar{\@pt@star}{\@pt@no@star}}

\newcommand\@pt@no@star[1]{\mathrm{#1}}

\newcommand\@pt@star[2]{%
    \@pt@no@star{#1}_{#2}
}


% Lines

\newcommand\gline[3][O]{%
	\IfStrEqCase{#1}{%
		{O}{\left(}%
		{C}{\left[}%
		{OC}{\left(}%
		{CO}{\left[}%
	}%
	 #2 #3%		
	\IfStrEqCase{#1}{%
		{O}{\right)}%
		{C}{\right]}%
		{OC}{\right]}%
		{CO}{\right)}%
	}%
}

\newcommand\pgline[3][O]{%
    \gline[#1]{\pt{#2}}{\pt{#3}}%
}


\newcommand\hgline[2]{%
    \gline[CO]{#1}{#2}%
}

\newcommand\phgline[2]{%
    \pgline[CO]{#1}{#2}%
}


\newcommand\segment[2]{%
    \gline[C]{#1}{#2}%
}

\newcommand\psegment[2]{%
    \pgline[C]{#1}{#2}%
}


% Source
%    * https://tex.stackexchange.com/questions/511495
\let\stdparallel\parallel
\renewcommand{\parallel}{\mathrel{/\mkern-5mu/}}

\let\stdnparallel\nparallel
\renewcommand{\nparallel}{%
  \mathrel{\mathpalette\not@parallel\relax}%
}
\newcommand{\not@parallel}[2]{%
  \ooalign{\reflectbox{$\m@th#1\smallsetminus$}\cr\hfil$\m@th#1\parallel$\cr}%
}


% ------------ %
% -- VECTOR -- %
% ------------ %

\newcommand\@no@point[1]{%
    \if#1i%
        \imath%
    \else%
        \if#1j%
            \jmath%
        \else%
            #1
        \fi%
    \fi%
}

\newcommand\vect{\@ifstar{\@vect@star}{\@vect@no@star}}
\newcommand*\@vect@star[1]{\vv*{\@no@point{#1}}}
\newcommand*\@vect@no@star[1]{\vv{\@no@point{#1}}}


% ----------------- %
% -- VECTOR NORM -- %
% ----------------- %

% Source :
%    * https://tex.stackexchange.com/a/43009/6880
%
\DeclarePairedDelimiter\norm{\lVert}{\rVert}%


\let\@old@norm\norm
\def\norm{\@ifstar{\@old@norm}{\@old@norm*}}


% --------------------- %
% -- VECTOR PRODUCTS -- %
% --------------------- %

% The dot product

\newcommand\dotprod[2]{%
    #1 \cdot #2%
}

\newcommand\vdotprod[2]{%
    \@apply@macro@two@args{\dotprod}{\vect}{#1}{#2}%
}


\newcommand\adotprod{\@ifstar{\@adotprod@star}{\@adotprod@no@star}}

\newcommand\@adotprod@star[2]{%
    \ensuremath{\langle \, #1 \mid #2 \, \rangle}%
}

\newcommand\@adotprod@no@star[2]{%
    \ensuremath{\left\langle \, #1 \, \left| \,  \vphantom{#1} #2 \right. \, \right\rangle}%
}


\newcommand\vadotprod{\@ifstar{\@vadotprod@star}{\@vadotprod@no@star}}

\newcommand\@vadotprod@star[2]{%
    \@apply@macro@two@args{\@adotprod@star}{\vect}{#1}{#2}%
}

\newcommand\@vadotprod@no@star[2]{%
    \@apply@macro@two@args{\@adotprod@no@star}{\vect}{#1}{#2}%
}


% The cross product

\newcommand\crossprod[2]{%
    #1 \wedge #2%
}

\newcommand\vcrossprod[2]{%
    \@apply@macro@two@args{\crossprod}{\vect}{#1}{#2}%
}

% Source
%	* https://tex.stackexchange.com/a/548662/6880

\newcommand\ccrossprod[8]{%
	\begin{vNiceMatrix}[first-row]
		#1 & #5  \\
		#2 & #6  \\
		#3 & #7  \\
		#4 & #8  \\
		#2 & #6
		%%
		\CodeAfter
    	\begin{tikzpicture}
    		\path (2-1.east) 
    			  -- node[below = 0.35em,
			              blue,
			              circle,
			              inner sep = 1.25pt]
			         (minusone) {\tiny$1$}
			      (2-2.west);
    		\draw [blue,->]
     			   let \p1 = ($(minusone.east) - (minusone.center)$) in 
    	    		   ([xshift = 0.5mm]2-1.east)
			           to[out = 0, in = 137.5]
			           (minusone.50)
		   			   arc[start angle = 50,
					       end angle = -230,
					       radius = \x1] 
    	    		   to[out = 42.5, in =190]
			           ([xshift = -0.3mm]2-1.east-|2-2.west);
            %%
     		\path (3-1.east) 
            	  -- node[below = 0.35em,
	                      red,
	                      circle,
	                      inner sep = 1.25pt] 
			         (minustwo) {\tiny$2$}
                  (3-2.west);
    		\draw [red,->]
     			   let \p1 = ($(minustwo.east) - (minustwo.center)$) in 
    	    		   ([xshift=0.5mm]3-1.east)
			           to[out = 0, in = 137.5]
			           (minustwo.50)
		   			   arc[start angle = 50,
					       end angle = -230,
					       radius = \x1] 
    	    		   to[out = 42.5, in =190] 
			           ([xshift = -0.3mm]3-1.east-|3-2.west);
            %%
    		\path (1-1.east) 
    			  -- node[below = 0.35em,
			              orange,
			              circle,
			              inner sep = 1.25pt] 
			         (minus) {\tiny$3$}
			      (1-2.west);
    		\draw [orange,->]
     			   let \p1 = ($(minus.east) - (minus.center)$) in 
    	    		   ([xshift=0.5mm]1-1.east)
			           to[out = 0, in = 137.5]
			           (minus.50)
		   			   arc[start angle = 50,
					       end angle = -230,
					       radius = \x1] 
    	    		   to[out = 42.5, in =190] 
			           ([xshift=-0.3mm]1-1.east-|1-2.west);
        \end{tikzpicture} 
	\end{vNiceMatrix}
}


\newcommand\vccrossprod[8]{%
	\ccrossprod{\vect{#1}}{#2}{#3}{#4}{\vect{#5}}{#6}{#7}{#8}%
}


% --------------------------- %
% -- VECTOR 2D COLINEARITY -- %
% --------------------------- %

% Source
%	* F. Pantigny gives me good advices to use its great package nicematrix.
%	* https://tex.stackexchange.com/a/548662/6880

\newcommand\cdetplane{\@ifstar{\@cdetplane@star}{\@cdetplane@no@star}}

\newcommand\@cdetplane@star[6]{%
	\begin{vNiceMatrix}[first-row]
		#1 & #4 \\
		#2 & #5 \\
		#3 & #6
	\end{vNiceMatrix}
}

\newcommand\@cdetplane@no@star[6]{%
	\begin{vNiceMatrix}[first-row,columns-width=1.1em]
		#1 & #4  \\
		#2 & #5  \\
		#3 & #6
   		%%
		\CodeAfter
    	\begin{tikzpicture}
    		\path (1-1.east) 
    			  -- node[below = 0.45em,
			  			  red,
						  circle,
						  inner sep = 1pt] 
			         (minus) {\tiny$-$}
			      (1-2.west);
    		\draw [red,->]
     			   let \p1 = ($(minus.east) - (minus.center)$) in 
    	    		   ([xshift = 0.5mm]1-1.east)
			           to[out = 0, in = 137.5]
			           (minus.50)
		   			   arc[start angle = 50,
					       end angle = -230,
					       radius = \x1] 
    	    		   to[out = 42.5, in =190]
			           ([xshift = -0.3mm]1-1.east-|1-2.west);
    	\end{tikzpicture}   
	\end{vNiceMatrix}
}


\newcommand\vcdetplane{\@ifstar{\@vcdetplane@star}{\@vcdetplane@no@star}}

\newcommand\@vcdetplane@star[6]{%
    \@cdetplane@star{\vect#1}{#2}{#3}%
                    {\vect#4}{#5}{#6}%
}

\newcommand\@vcdetplane@no@star[6]{%
    \@cdetplane@no@star{\vect#1}{#2}{#3}%
                       {\vect#4}{#5}{#6}%
}


% --------------------------- %
% -- CARTESIAN COORDINATES -- %
% --------------------------- %

\newcommand\coord{\@ifstar{\@coord@star}{\@coord@no@star}}

\newcommand\@coord@no@star[1]{%
    \left( \,%
% ARG 1  = Separator: |
% ARG 2  = All parts: what the user types !
% ARG 3  = Before   : nothing here
% ARG 4  = Between  : ;
% ARG 5  = After    : nothing here
% OPTION = Ornament : macro to apply to each item
        \makemultiargument{|}{#1}{}{\lymathsep}{}%
     \, \right)%
}

\newcommand\@coord@star[1]{%
    ( \,%
        \makemultiargument{|}{#1}{}{\lymathsep}{}%
    \, )%
}


\newcommand\vcoord{\@ifstar{\@vcoord@star}{\@vcoord@no@star}}

\newcommand\@vcoord@no@star[1]{%
    \makemultiargument{|}{#1}{\begin{pmatrix}}{\\}{\end{pmatrix}}%
}

\newcommand\@vcoord@star[1]{%
    \makemultiargument{|}{#1}{\begin{bNiceMatrix}}{\\}{\end{bNiceMatrix}}%
}


% -------------------- %
% -- CARTESIAN AXES -- %
% -------------------- %

% Sources : see the sources of the macros for continued fractions.

% General naming of axes
\def\@axes@comafy@#1|#2\@nil{%
    \@ifmtarg{#2}{%
        #1%
    }{%
        #1 \lymathsubsep{} \@axes@comafy@#2\@nil%
    }%
}

\newcommand\axes{\@ifstar{\@axes@star}{\@axes@no@star}}

\newcommand\@axes@no@star[1]{%
    \@axes@no@star@splitter@#1|\@nil%
}
\def\@axes@no@star@splitter@#1|#2\@nil{%
    \ensuremath{\@interval@tool@no@star{(}{#1}{\lymathsep{}}{\@axes@comafy@#2\@nil}{)}}%
}

\newcommand\@axes@star[1]{%
    \@axes@star@splitter@#1|\@nil%
}
\def\@axes@star@splitter@#1|#2\@nil{%
    \ensuremath{\@interval@tool@star{(}{#1}{\lymathsep{}}{\@axes@comafy@#2\@nil}{)}}%
}

% Geometric points for naming some axes
\def\@axes@comafy@gptify@#1|#2\@nil{%
    \@ifmtarg{#2}{%
        \pt{#1}%
    }{%
        \pt{#1} \lymathsubsep{} \@axes@comafy@gptify@#2\@nil%
    }%
}

\newcommand\paxes[1]{%
    \@paxes@splitter@#1|\@nil%
}
\def\@paxes@splitter@#1|#2\@nil{%
    \ensuremath{\@interval@tool@no@star{(}{\pt{#1}}{\lymathsep{}}{\@axes@comafy@gptify@#2\@nil}{)}}%
}

% Vectors for naming some axes
\def\@axes@comafy@vectify@#1|#2\@nil{%
    \@ifmtarg{#2}{%
        \vect{\trim@spaces{#1}}%
    }{%
        \vect{\trim@spaces{#1}} \lymathsubsep{} \@axes@comafy@vectify@#2\@nil%
    }%
}

\newcommand\vaxes[1]{%
    \@vaxes@splitter@#1|\@nil%
}
\def\@vaxes@splitter@#1|#2\@nil{%
    \ensuremath{\@interval@tool@no@star{(}{#1}{\lymathsep{}}{\@axes@comafy@vectify@#2\@nil}{)}}%
}

% Geometric points and vectors for naming some axes
\newcommand\pvaxes[1]{%
    \@pvaxes@splitter@#1|\@nil%
}
\def\@pvaxes@splitter@#1|#2\@nil{%
    \ensuremath{\@interval@tool@no@star{(}{\pt{#1}}{\lymathsep{}}{\@axes@comafy@vectify@#2\@nil}{)}}%
}


% --------- %
% -- ARC -- %
% --------- %

\newcommand\circarc{\@ifstar{\@circarc@star}{\@circarc@no@star}}
\newcommand*\@circarc@star[2]{\wideparen{\@no@point{#1}}\vphantom{#1}_{#2}}
\newcommand*\@circarc@no@star[1]{\wideparen{\@no@point{#1}}}


% --------------------- %
% -- ANGLE GEOMETRIC -- %
% --------------------- %

% Source : http://forum.mathematex.net/latex-f6/arc-dont-le-nom-comporte-un-indice-t12392.html#p120204

\newcommand\anglein{\@ifstar{\@anglein@star}{\@anglein@no@star}}
\newcommand*\@anglein@star[2]{\widehat{\@no@point{#1}}\vphantom{#1}_{#2}}
\newcommand*\@anglein@no@star[1]{\widehat{\@no@point{#1}}}


% -------------------- %
% -- ANGLE ORIENTED -- %
% -------------------- %

\newcommand\angleorient{\@ifstar{\@angleorient@star}{\@angleorient@no@star}}

\newcommand\@angleorient@star[2]{%
    \@interval@tool@star{(}{\, #1}{\lymathsep}{#2\, }{)}%
}

\newcommand\@angleorient@no@star[2]{%
    \@interval@tool@no@star{(}{\, #1}{\lymathsep}{#2\, }{)}%
}


\newcommand\vangleorient{\@ifstar{\@vangleorient@star}{\@vangleorient@no@star}}

\newcommand\@vangleorient@star[2]{%
    \@apply@macro@two@args{\@angleorient@star}{\vect}{#1}{#2}%
}

\newcommand\@vangleorient@no@star[2]{%
    \@apply@macro@two@args{\@angleorient@no@star}{\vect}{#1}{#2}%
}


\newcommand\hangleorient{\@ifstar{\@hangleorient@star}{\@hangleorient@no@star}}

\newcommand\@hangleorient@star[2]{%
    \widehat{\@angleorient@star{#1}{#2}}%
}

\newcommand\@hangleorient@no@star[2]{%
    \widehat{\@angleorient@no@star{#1}{#2}}%
}


\newcommand\hvangleorient{\@ifstar{\@hvangleorient@star}{\@hvangleorient@no@star}}

\newcommand\@hvangleorient@star[2]{%
    \@apply@macro@two@args{\@hangleorient@star}{\vect}{#1}{#2}%
}

\newcommand\@hvangleorient@no@star[2]{%
    \@apply@macro@two@args{\@hangleorient@no@star}{\vect}{#1}{#2}%
}


% --------------- %
% -- CONSTANTS -- %
% --------------- %

% Constants - START

% User's constants

\newcommand\ct[1]{%
    \IfStrEqCase{#1}{%
        {gamma}{\upgamma}%
        {pi}{\uppi}%
        {tau}{\uptau}%
    }[\text{\textbf{#1}}]
}

% Classical constants
    
\newcommand\ggamma{\ct{gamma}}
\newcommand\ppi{\ct{pi}}
\newcommand\ttau{\ct{tau}}
\newcommand\ee{\ct{e}}
\newcommand\ii{\ct{i}}
\newcommand\jj{\ct{j}}
\newcommand\kk{\ct{k}}

% Constants - END


% ------------------ %
% -- ABS FUNCTION -- %
% ------------------ %

% Source :
%    * https://tex.stackexchange.com/a/43009/6880
%
\DeclarePairedDelimiter\abs{\lvert}{\rvert}%

\let\@old@abs\abs
\def\abs{\@ifstar{\@old@abs}{\@old@abs*}}


% --------------------- %
% -- NAMED FUNCTIONS -- %
% --------------------- %

% Classical functions - START

\DeclareMathOperator{\pgcd}{\operatorname{pgcd}}
\DeclareMathOperator{\ppcm}{\operatorname{ppcm}}
\DeclareMathOperator{\acos}{\operatorname{acos}}
\DeclareMathOperator{\asin}{\operatorname{asin}}
\DeclareMathOperator{\atan}{\operatorname{atan}}
\DeclareMathOperator{\arccosh}{\operatorname{arccosh}}
\DeclareMathOperator{\arcsinh}{\operatorname{arcsinh}}
\DeclareMathOperator{\arctanh}{\operatorname{arctanh}}
\DeclareMathOperator{\acosh}{\operatorname{acosh}}
\DeclareMathOperator{\asinh}{\operatorname{asinh}}
\DeclareMathOperator{\atanh}{\operatorname{atanh}}
\DeclareMathOperator{\fch}{\operatorname{ch}}
\DeclareMathOperator{\fsh}{\operatorname{sh}}
\DeclareMathOperator{\fth}{\operatorname{th}}
\DeclareMathOperator{\afch}{\operatorname{ach}}
\DeclareMathOperator{\afsh}{\operatorname{ash}}
\DeclareMathOperator{\afth}{\operatorname{ath}}

\newcommand\expb[1]{\exp_{#1}}
\newcommand\logb[1]{\log_{#1}}

% Classical functions - END


% --------------- %
% -- SEQUENCES -- %
% --------------- %

\newcommand\seqsuprageo[5]{ \prescript{#5}{#2}{#1}_{#3}^{#4} }

\newcommand\seqhypergeo[3]{%
    \seqsuprageo{#1}{#2}{#3}{}{}%
}

\newcommand\seqplus[3]{%
    \seqsuprageo{#1}{}{#2}{#3}{}%
}


% --------------------------- %
% -- DIFFERENTIAL CALCULUS -- %
% --------------------------- %

% Sources :
%    * http://forum.mathematex.net/latex-f6/en-tete-de-ds-t12933.html#p124908
%    * http://forum.mathematex.net/latex-f6/derivee-avec-un-d-droit-et-espace-t12932.html#p124930
%    * http://forum.mathematex.net/latex-f6/remplacer-des-espaces-par-autre-chose-t12952.html#p125062
%    * http://forum.mathematex.net/latex-f6/probleme-de-remplacement-de-cdots-t13047.html#p125782

% dd, partial and pp useful operators
%
% Argument #1: the exponent
% Argument #2: the variable
% Argument #3: the operator
\newcommand{\@diffOpe}[3]{%
    #3%
    \ifx0#1\else^{#1}\!\fi%
    \hspace{0.07em}#2%
}

\DeclareRobustCommand\@dder{
    \mathop{}\mathopen{}\mathrm{d}
}

\newcommand\dd[2][0]{\@diffOpe{#1}{#2}{\@dder}}

\let\original@partial\partial
\renewcommand{\partial}{%
    \original@partial\mathopen{}%
}

\newcommand\pp[2][0]{\@diffOpe{#1}{#2}{\partial}}

% Power writing of total derivate
\newcommand\derpow{\@ifstar{\@derpow@star}{\@derpow@no@star}}

\newcommand\@derpow@no@star[2][]{
    \@ifmtarg{#1}{
        #2^{\left( 1 \right)}
    }{
        #2^{\left( #1 \right)}
    }
}

\newcounter{@derpow@no@star@counter}

\newcommand\@derpow@star[2][]{
    \@ifmtarg{#1}{
        #2^{\,\prime}
    }{
        #2^{\,%
            \forloop[1]{@derpow@no@star@counter}{0}{\value{@derpow@no@star@counter} < #1}{%
                \prime%
            }
        }
    }
}

% Parenthesis versions of a total derivate
\newcommand\derpar{\@ifstar{\@derpar@star}{\@derpar@no@star}}

\newcommand\@derpar@no@star[2][]{
    \derpow[#1]{\left( #2 \right)}
}

\newcommand\@derpar@star[2][]{
    \derpow*[#1]{\left( #2 \right)}
}

\newcommand\sderpar{\@ifstar{\@sderpar@star}{\@sderpar@no@star}}

\newcommand\@sderpar@no@star[2][]{
    \derpow[#1]{( #2 )}
}

\newcommand\@sderpar@star[2][]{
    \derpow*[#1]{( #2 )}
}

% Fractional writing of total derivate
\newcommand\derfrac{\@ifstar{\@derfrac@star}{\@derfrac@no@star}}

\newcommand\@derfrac@no@star[3][]{
    \@ifmtarg{#1}{
        \frac{\dd{#2}}{\dd{#3}}
    }{
        \frac{\dd[#1]{#2}}{\dd{#3}^{#1}}
    }
}

\newcommand\@derfrac@star[3][]{
    \@derfrac@no@star[#1]{}{#3} #2
}

% Subscript writing of total derivate
\newcommand\dersub[3][]{
% The following command works because xstring traits {...} like a single character.
    \dd%
    \@ifmtarg{#1}{
        ^{\vphantom{\prime}}%
    }{%
        ^{#1}%
    }%
    _{#3} #2%
}

%% Subscript writing of partial derivate

\newcommand\@bracketIt[1]{(#1)}

\newcommand\partialsub[2]{
% The following command works because xstring traits {...} like a single character.
    \noexpandarg
    \StrSubstitute{#2}{^}{\@bracketIt}[\@index]
    \partial%
    ^{\vphantom{\prime}}%
    _{\expandafter\StrSubstitute\expandafter{\@index}{|}{\,}}%
    #1%
    \expandarg
}


% Prime writing of partial derivate
\newcommand\partialprime[2]{
% The following command works because xstring traits {...} like a single character.
    \noexpandarg
    \StrSubstitute{#2}{^}{\@bracketIt}[\@index]%
    \derpow*{#1}%
    _{\expandafter\StrSubstitute\expandafter{\@index}{|}{\,}}
    \expandarg
}

% Fractional writing of partial derivate
\newcommand\partialfrac{\@ifstar{\@partialfrac@star}{\@partialfrac@no@star}}

\newcommand\@partialfrac@no@star[3][0]{%
    \frac{%
        \pp[#1]{#2}%
    }{%
% ARG 1 = Separator: |
% ARG 2 = All parts: what the user types !
% ARG 3 = Before   : nothing here
% ARG 4 = Between  : ;
% ARG 5 = After    : nothing here
        \makemultiargument{|}{#3}{\partial}{\,\partial}{}%
    }
}

\newcommand\@partialfrac@star[3][\relax]{
    \@partialfrac@no@star[#1]{}{#3} #2
}


% ----------------------- %
% -- INTEGRAL CALCULUS -- %
% ----------------------- %

% Source for minimizing spaces between consecutive integrals :
%    * http://forum.mathematex.net/latex-f6/integrale-triple-t13312.html#p128016

% Consecutive integrals

\let\stdint\int
\DeclareRobustCommand{\int}{%
    \stdint\operator@followup{\@ifnextchar{\int}{\!\!}{}}%
}

\def\operator@followup#1{%
    \@ifnextchar{^}{\operator@followup@sup{#1}}%
        {\operator@followup@nosup{#1}}%
}

\def\operator@followup@sup#1^#2{%
    \@ifnextchar{_}{\operator@followup@sup@sub{#1}^{#2}}%
        {\operator@followup@sup@nosub{#1}^{#2}}%
}

\def\operator@followup@sup@sub#1^#2_#3{%
    \operator@followup@{#1}{#2}{#3}%
}

\def\operator@followup@sup@nosub#1^#2{%
    \operator@followup@{#1}{#2}{}%
}

\def\operator@followup@nosup#1{%
    \@ifnextchar{_}{\operator@followup@nosup@sub{#1}}
        {\operator@followup@nosup@nosub{#1}}%
}

\def\operator@followup@nosup@sub#1_#2{%
    \@ifnextchar{^}{\operator@followup@nosup@sub@sup{#1}_{#2}}
        {\operator@followup@nosup@sub@nosup{#1}_{#2}}%
}

\def\operator@followup@nosup@sub@sup#1_#2^#3{%
    \operator@followup@{#1}{#3}{#2}%
}

\def\operator@followup@nosup@sub@nosup#1_#2{%
    \operator@followup@{#1}{}{#2}%
}

\def\operator@followup@nosup@nosub#1{%
    \operator@followup@{#1}{}{}%
}

\def\operator@followup@#1#2#3{%
    ^{#2}_{#3}#1%
}

% The hook calculator
\newcommand\hook{\@ifstar{\@hook@star}{\@hook@no@star}}
\newcommand\@hook@star[3]{\ensuremath{ \left[ \vphantom{\relsize{1.25}{\text{$\displaystyle F_1^2$}}} \right. \!\! #1 \left. \vphantom{\relsize{1.25}{\text{$\displaystyle F_1^2$}}} \!\! \right]_{#2}^{#3} }}
\newcommand\@hook@no@star[3]{\left[ \vphantom{\text{\relsize{1.1}$#1$}} #1 \right]_{#2}^{#3}}

\newcommand\vhook{\@ifstar{\@vhook@star}{\@vhook@no@star}}
\newcommand\@vhook@star[3]{#1 {\text{\relsize{1.5}$\rvert$}}_{#2}^{#3}}
\newcommand\@vhook@no@star[3]{\left. #1 \right\rvert_{#2}^{#3}}


% ------------ %
% -- TABLES -- %
% ------------ %

% Better style for arrowhead !

\tkzTabSetup[arrowstyle = triangle 60]


% ------------------------ %
% -- BIG SMALL O AND CO -- %
% ------------------------ %

% Sources :
%     1) http://forum.mathematex.net/latex-f6/bonnes-commandes-de-base-t12278.html
%     2) http://tex.stackexchange.com/questions/30944/mathcalo-and-font-size
%     3) https://tex.stackexchange.com/a/53091/6880

\newcommand\@bigtAsymptoricOpe[2]{%
    \ensuremath{%
        \if\relax\detokenize{#2}\relax
            #1%
        \else
            \mathop{}\mathopen{}#1\mathopen{}\left( #2 \right)%
        \fi
    }%
}

\newcommand\bigomega[1]{%
    \@bigtAsymptoricOpe{\bm{\Omega}}{#1}%
}

\newcommand\bigtheta[1]{%
    \@bigtAsymptoricOpe{\bm{\Theta}}{#1}%
}

\newcommand\bigO[1]{%
    \@bigtAsymptoricOpe{\mathcal{O}}{#1}%
}

\newcommand\smallO[1]{%
    \if\relax\detokenize{#1}\relax
        \mathchoice{% * Display style
            {\scriptstyle\mathcal{O}}%
        }{%           * Text style
            {\scriptstyle\mathcal{O}}%
        }{%           * Script style
            {\scriptscriptstyle\mathcal{O}}%
        }{%           * Script script style
            %\scalebox{0.8}{$\scriptscriptstyle\mathcal{O}$}%
        }
    \else
        \mathchoice{% * Display style
            \operatorname{\scriptstyle\mathcal{O}}\!\left(#1\right)%
        }{%           * Text style
            \operatorname{\scriptstyle\mathcal{O}}\!\left(#1\right)%
        }{%           * Script style
            \operatorname{\scriptscriptstyle\mathcal{O}}\left(#1\right)%
        }{%           * Script script style
            \operatorname{\scalebox{0.8}{$\scriptscriptstyle\mathcal{O}$}}\left(#1\right)%
        }
    \fi
}


% ---------- %
% -- BASE -- %
% ---------- %

% Semantic probability

\newcommand\proba[2][p]{%
    \mathchoice{% * Display style
        #1\mskip-.65\medmuskip\left( #2 \right)%
    }{%           * Text style
        #1\mskip-.65\medmuskip\left( #2 \right)%
    }{%           * Script style
        #1\left( #2 \right)%
    }{%           * Script script style
        #1\left( #2 \right)%
    }
}


% Conditional probability

\newcommand\@abstract@proba@cond[4]{%
    #1{\proba[#2]{#3 \cap #4}}{\proba[#2]{#4}}%
}


\newcommand\probacond{\@ifstar{\@probacond@star}{\@probacond@no@star}}
\newcommand\@probacond@star{\@ifstar{\@probacond@star@star}{\@probacond@one@star}}

\newcommand\@probacond@no@star[3][p]{%
    \proba[#1_{#2}]{#3}%
}

\newcommand\@probacond@one@star[3][p]{%
    \proba[#1]{#3 \mid #2}%
}

\newcommand\@probacond@star@star[3][p]{%
    \@abstract@proba@cond{\frac}{#1}{#3}{#2}
}


\newcommand\dprobacond{\@ifstar{\@dprobacond@star}{\@dprobacond@no@star}}
\newcommand\@dprobacond@star{\@ifstar{\@dprobacond@star@star}{\@dprobacond@one@star}}

\newcommand\@dprobacond@star@star[3][p]{%
    \@abstract@proba@cond{\dfrac}{#1}{#3}{#2}
}


% Expected value 

\newcommand\expval[2][E]{%
	\proba[\mathrm{#1}]{#2}%
}


% ---------- %
% -- TREE -- %
% ---------- %

\useforestlibrary{linguistics}
\forestset{
    declare count   = {connections}{1},
    frame/.style    = {tikz={\node [draw, #1, thick, rounded corners,fit to=tree]{};}},
    apweight/.style = {edge label={node[pos=.5,sloped,above, fill=white]{#1}}},
    bpweight/.style = {edge label={node[pos=.5,sloped,below, fill=white]{#1}}},
    pweight/.style  = {edge label={node[midway, fill=white]{#1}}},
    pweight*/.style = {}
}
% Sources
%    * ???? (all settings)
%    * https://tex.stackexchange.com/a/511763/6880 (hide/show the weights)

\newcommand\@proba@tree[1]{
    \begin{forest}
        for tree = {%
            sn edges,
            grow'  = 0,
            l      = 2.5cm,
            s sep  = 1.2cm,
            anchor = parent,
        },
        before typesetting nodes = {%
            where connections = 1{}{%
                if = {isodd(connections())}{%
                    edge path' = {%
                        foreach \i [
                            count    = \j from 0,
                            evaluate = \noexpand\j
                            as \noexpand\k
                            using \noexpand {
                                (\j == 0) ?
                                0pt :
                                ((isodd(\j)) ?
                                (\j*4pt) :
                                ((-\j + 1)*4pt))
                            }
                        ]
                        in {%
                            1, ..., \foresteoption{connections}
                        }{
                            (!u.parent anchor)
                            --
                            ([yshift = \noexpand\k].child anchor)
                        }
                    },
                }{%
                    edge path' = {%
                        foreach \i [
                            count    = \j,
                            evaluate = \noexpand\j
                            as \noexpand\k
                            using {
                                (isodd(\j)) ?
                                (\j*4pt) :
                                ((-\j + 1)*4pt)
                            }
                        ]
                        in {1,...,\foresteoption{connections}}
                        {
                            (!u.parent anchor)
                            --
                            ([yshift = \noexpand\k].child anchor)
                        }
                    },
                },
            },
        },
        #1
    \end{forest}
}

% Source: https://stackoverflow.com/a/1873617/4589608
\newenvironment{probatree}{\startprobatree}{}
\def\startprobatree#1\end{\@proba@tree{#1}\end}

\newenvironment{probatree*}{
    \forestset{pweight/.style={}}
    \begin{probatree}
}{
    \end{probatree}
}


% --------------------- %
% -- BASIC OPERATORS -- %
% --------------------- %

\newcommand\divides{\mid}
\newcommand\notdivides{\nmid}

\newcommand\modulo{\bmod}


% ------------------------ %
% -- CONTINUED FRACTION -- %
% ------------------------ %

% Sources :
%    * https://groups.google.com/forum/?hl=fr&fromgroups#!topic/fr.comp.text.tex/UrUZiurKwm0
%    * http://tex.stackexchange.com/questions/68190/continued-fraction-in-inline-equations/68196#68196
%    * http://tex.stackexchange.com/questions/23432/how-to-create-my-own-math-operator-with-limits

% Operator
\newcommand\contfracope{%
    \operatornamewithlimits{%
        \mathchoice{% * Display style
            \vcenter{\hbox{\huge $\mathcal{K}$}}%
        }{%           * Text style
            \vcenter{\hbox{\Large $\mathcal{K}$}}%
        }{%           * Script style
            \mathrm{\mathcal{K}}%
        }{%           * Script script style
            \mathrm{\mathcal{K}}%
        }
    }
}

% Single continued fraction (useful ?)
\newcommand\singlecontfrac[2]{%
    \begin{array}{@{}c@{}}%
        \multicolumn{1}{c|}{#1}%
        \\%
        \hline%
        \multicolumn{1}{|c}{#2}%
    \end{array}%
}

% Standard continued fraction
\newcommand\contfrac{\@ifstar{\@contfrac@star}{\@contfrac@no@star}}

\newcommand\@contfrac@no@star[1]{%
    \@contfrac@no@star@recu@#1|\@nil%
}
\def\@contfrac@no@star@recu@#1|#2\@nil{%
    \@ifmtarg{#2}{%
        #1%
    }{%
        #1 + \cfrac{1}{\@contfrac@no@star@recu@#2\@nil}%
    }%
}

\newcommand\@contfrac@star[1]{%
    \@contfrac@star@before@#1|\@nil%
}
\def\@contfrac@star@before@#1|#2\@nil{%
    \@ifmtarg{#2}{%
        #1%
    }{%
        #1 \@contfrac@star@recu@#2\@nil%
    }%
}
\def\@contfrac@star@recu@#1|#2\@nil{%
    \@ifmtarg{#2}{%
        + \singlecontfrac{1}{#1}%
    }{%
        + \singlecontfrac{1}{#1} \@contfrac@star@recu@#2\@nil%
    }%
}

% Generalized continued fraction
\newcommand\contfracgene{\@ifstar{\@contfracgene@star}{\@contfracgene@no@star}}

\newcommand\@contfracgene@no@star[1]{%
    \@contfracgene@no@star@recu@#1||\@nil%
}
\def\@contfracgene@no@star@recu@#1|#2|#3\@nil{%
    \@ifmtarg{#2}{%
        #1%
    }{%
        #1 + \cfrac{#2}{\@contfracgene@no@star@recu@#3\@nil}%
    }%
}


\newcommand\@contfracgene@star[1]{%
    \@contfracgene@star@before@#1|\@nil%
}
\def\@contfracgene@star@before@#1|#2\@nil{%
    \@ifmtarg{#2}{%
        #1%
    }{%
        #1 \@contfracgene@star@recu@#2\@nil%
    }%
}
\def\@contfracgene@star@recu@#1|#2|#3\@nil{%
    \@ifmtarg{#3}{%
        + \singlecontfrac{#1}{#2}%
    }{%
        + \singlecontfrac{#1}{#2} \@contfracgene@star@recu@#3\@nil%
    }%
}


% ----------------------- %
% -- POLYNOMIAL AND CO -- %
% ----------------------- %

\newcounter{@nb@decorators}

% Argument 1: the set
% Argument 2: the variable(s)
% Argument 3: the 1st decorator
% Argument 4: the 2nd decorator
% Argument 5: the number of decorators
\newcommand\@set@special@algebra[5]{%
    \ensuremath{%
        #1 \! %
        \ifx1#5
            \@interval@tool@star{#3}{}{%
                \,\makemultiargument{|}{#2}{}{\lymathsep}{}\,%
            }{}{#4}%
        \else
            \@interval@tool@star{#3}{}{%
                \@interval@tool@star{#3}{}{%
                    \, \makemultiargument{|}{#2}{}{\lymathsep}{} \,%
                }{}{#4}%
            }{}{#4}%
        \fi
    }
}


\newcommand\setpoly[2]{%
    \@set@special@algebra{#1}{#2}{[}{]}{1}%
}


\newcommand\setpolyfrac[2]{%
    \@set@special@algebra{#1}{#2}{(}{)}{1}%
}


\newcommand\setserie[2]{%
    \@set@special@algebra{#1}{#2}{[}{]}{2}%
}


\newcommand\setseriefrac[2]{%
    \@set@special@algebra{#1}{#2}{(}{)}{2}%
}


\newcommand\setpolylaurent[2]{%
    \@set@special@algebra{#1}{#2}{\{}{\}}{1}%
}

\newcommand\setserielaurent[2]{%
    \@set@special@algebra{#1}{#2}{\{}{\}}{2}%
}


% -------------- %
% -- MATRICES -- %
% -------------- %

\NiceMatrixOptions{transparent}

\newcommand\cdettwo[4]{%
	\begin{vNiceMatrix}[columns-width=1.1em]
		#1 & #2  \\
		#3 & #4
   		%%
		\CodeAfter
    	\begin{tikzpicture}
    		\path (1-1.east) 
    			  -- node[below = 0.45em,
			  			  red,
						  circle,
						  inner sep = 1pt] 
			         (minus) {\tiny$-$}
			      (1-2.west);
    		\draw [red,->]
     			   let \p1 = ($(minus.east) - (minus.center)$) in 
    	    		   ([xshift = 0.5mm]1-1.east)
			           to[out = 0, in = 137.5]
			           (minus.50)
		   			   arc[start angle = 50,
					       end angle = -230,
					       radius = \x1] 
    	    		   to[out = 42.5, in =190]
			           ([xshift = -0.3mm]1-1.east-|1-2.west);
    	\end{tikzpicture}   
	\end{vNiceMatrix}
}


\newcommand\cdetthree{\@ifstar{\@cdetthree@star}{\@cdetthree@no@star}}


\newcommand\@cdetthree@star[9]{%
	STAR
}


\newcommand\@cdetthree@no@star[9]{%
	NO STAR
}
